name: Deploy

on:
  push:
    branches:
      - main
      - prod

jobs:
  test-lint:
    name: "Test and Lint"
    uses: "./.github/workflows/test-and-lint.yml"
    secrets:
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}

  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    needs: [test-lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set vars
        run: |
          if [[ "$GITHUB_REF" == 'refs/heads/prod' ]]; then
            echo "prod" > .workspace
          else
            echo "staging" > .workspace
          fi
      - name: Push to ACR
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        run: |
          echo "Logging in to Azure..."
          az login --service-principal \
            --username ${{ vars.ARM_CLIENT_ID }} \
            --password ${{ secrets.ARM_CLIENT_SECRET }} \
            --tenant ${{ vars.ARM_TENANT_ID }}

          echo "Logging in to ACR..."
          az acr login --name ${{ vars.ACR_NAME_APP }}

          echo "Building and pushing app image..."
          docker build \
            --compress \
            --file compose/azure-dev/django/Dockerfile \
            --tag ${{ vars.ACR_NAME_APP }}/${{ vars.ACR_REPO_APP }}:$GITHUB_SHA .
          docker push ${{ vars.ACR_NAME_APP }}/${{ vars.ACR_REPO_APP }}:$GITHUB_SHA

          echo "Logging in to proxy ACR..."
          az acr login --name ${{ vars.ACR_NAME_PROXY }}

          echo "Building and pushing proxy image..."
          docker build \
            --compress \
            --file compose/azure-dev/nginx/Dockerfile \
            --tag ${{ vars.ACR_NAME_PROXY }}/${{ vars.ACR_REPO_PROXY }}:$GITHUB_SHA \
            .
          docker push ${{ vars.ACR_NAME_PROXY }}/${{ vars.ACR_REPO_PROXY }}:$GITHUB_SHA
      - name: Terraform Apply
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        run: |
          echo $ARM_SUBSCRIPTION_ID
          echo Zmienna
          export TF_VAR_acr_app_image="${{ vars.ACR_REPO_APP }}:$GITHUB_SHA"
          export TF_VAR_acr_proxy_image="${{ vars.ACR_REPO_PROXY }}:$GITHUB_SHA"
          workspace=$(cat .workspace)
          cd ./terraform/environments/development/infra
          docker compose run --rm \
            -e ARM_CLIENT_ID=$ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID \
            -e ARM_TENANT_ID=$ARM_TENANT_ID \
            terraform -chdir=deploy/ init \
            -var "ARM_CLIENT_ID=$ARM_CLIENT_ID" \
            -var "ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" \
            -var "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" \
            -var "ARM_TENANT_ID=$ARM_TENANT_ID"

          docker compose run --rm \
            -e ARM_CLIENT_ID=$ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID \
            -e ARM_TENANT_ID=$ARM_TENANT_ID \
            terraform -chdir=deploy/ workspace select -or-create=$workspace \
            -var "ARM_CLIENT_ID=$ARM_CLIENT_ID" \
            -var "ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" \
            -var "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" \
            -var "ARM_TENANT_ID=$ARM_TENANT_ID"

          docker compose run --rm \
            -e ARM_CLIENT_ID=$ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID \
            -e ARM_TENANT_ID=$ARM_TENANT_ID \
            terraform -chdir=deploy/ apply -auto-approve \
            -var "ARM_CLIENT_ID=$ARM_CLIENT_ID" \
            -var "ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" \
            -var "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" \
            -var "ARM_TENANT_ID=$ARM_TENANT_ID"