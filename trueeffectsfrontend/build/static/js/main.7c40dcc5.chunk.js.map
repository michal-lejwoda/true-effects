{"version":3,"sources":["components/helpers/function_helpers.js","components/modify_training/modals/AddTrainingToDifferentDayModal.js","components/validation/validation.js","components/settings_components/SettingsPasswordItems.js","redux/actions/types.js","redux/actions/trainingActions.js","components/settings_components/SettingsDimensionItems.js","redux/actions/authenticationActions.js","components/main_components/Settings.js","components/helpers/history_helpers.js","components/scheduler_components/DisplayTrainingOnSchedulerModal.js","components/main_components/Scheduler.js","components/training_components/CustomStopwatch.js","components/training_components/modals/FinishTrainingModal.js","components/hooks/training/useTraining.js","components/main_components/Training.js","components/modify_training/modals/RemoveTrainingModal.js","components/main_components/ModifyTraining.js","components/navbar_components/Navbar.js","components/goals_and_measurements_modals/CreateDimension.js","components/hooks/training/useDate.js","components/goals_and_measurements_modals/CompareDimensions.js","components/hooks/training/useCompareDimensions.js","components/goals_and_dimensions_components/Dimensions.js","components/goals_and_measurements_modals/CreateGoal.js","components/goals_and_measurements_modals/CheckGoal.js","components/goals_and_dimensions_components/Goals.js","components/hooks/training/useCreateMultiSeries.js","components/create_training_components/CreateMultiSeries.js","components/create_training_components/DisplayMultiSeries.js","components/hooks/training/useDisplayMultiSeries.js","components/create_training_components/modals/CreatedTrainingModal.js","components/create_training_components/modals/CreateExerciseModal.js","components/main_components/CreateTraining.js","components/hooks/training/useCreateTraining.js","components/dashboard_components/DashboardCompletedTrainings.js","components/dashboard_components/DashboardLastDimension.js","components/dashboard_components/DashboardUpcomingTrainings.js","components/main_components/Dashboard.js","components/DefaultContainer.js","components/hooks/auth/useAuth.js","redux/reducers/trainingReducer.js","redux/reducers/authenticationReducer.js","redux/reducers/index.js","store.js","images/logo.png","components/AuthenticateLogo.js","components/auth_components/Login.js","components/hooks/auth/useLogin.js","components/auth_components/Register.js","components/hooks/auth/useRegister.js","index.js"],"names":["convertDate","date","setHours","toISOString","split","handleDateForGoals","setFieldValue","AddTrainingToDifferentDayModal","props","values","handleSubmit","handleChange","errors","useFormik","initialValues","name","training","Date","validationSchema","addTrainingToDifferentDayValidation","validateOnChange","validationOnBlue","onSubmit","createTraining","then","getTrainings","handleMoveToScheduler","history","_jsx","children","Modal","show","onHide","handleClose","_jsxs","Header","Title","CloseButton","onClick","variant","Body","DatePicker","locale","value","className","placeholderText","dateFormat","onChange","type","Footer","yup","require","createGoalValidation","object","shape","finishDate","string","min","required","goal","max","description","updateGoalValidation","completed","boolean","settingsDimensionValidation","id","number","weight","growth","left_biceps","right_biceps","left_forearm","right_forearm","left_leg","right_leg","bodyfat","createDimensionValidation","nullable","createMultiSeriesValidation","exercise","nonNullable","extra_weight","typeError","rest","integer","reps","concentric_phase","pause_after_concentric_phase","eccentric_phase","pause_after_eccentric_phase","series_count","createSingleSeriesValidation","createTrainingValidation","multi_series","array","loginUserValidation","username","password","registerUserValidation","email","password2","oneOf","ref","createExerciseModalValidation","changePasswordValidation","old_password","new_password1","new_password2","SettingsPasswordItems","setErrors","changePassword","catch","err","response","data","POST_REGISTER","POST_LOGOUT_AUTH","GET_USER_DIMENSIONS_SUCCESS","GET_TRAININGS_SUCCESS","GET_USER_COMPLETED_GOALS_SUCCESS","GET_USER_GOALS_TO_ACHIEVE_SUCCESS","LOGIN_ERROR","REGISTER_ERROR","AUTH_ERROR","USER_LOADED","USER_LOADING","PUT_USER_DIMENSION_CONFIGURATION_SUCCESS","GET_USER_DIMENSION_CONFIGURATION_SUCCESS","GET_USER_DIMENSIONS_FOR_CREATE","GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS","TOKEN_LOADED","GET_SINGLE_TRAINING_SUCCESS","UPDATE_SINGLE_TRAINING_SUCCESS","CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS","GET_LAST_COMPLETED_TRAININGS","GET_UPCOMING_TRAININGS","TRUEEFFECTS_URL","process","postGoal","dispatch","getState","token","authentication","axios","defaults","headers","common","concat","post","res","alert","getCompletedGoals","get","payload","getGoalsToAchieve","getDimensions","getSingleTraining","updateTraining","put","getExercises","param","console","log","connect","state","userDimensionConfiguration","putDimensionConfiguration","handlePutSettingsDimensions","async","Form","Check","checked","label","postLogoutAuth","removeCookie","activeState","setActiveState","useState","FontAwesomeIcon","size","icon","faWeight","faLock","SettingsDimensionItems","handleMovetoDimensions","push","handleMoveToTraining","handleMoveToModifyTraining","DisplayTrainingOnSchedulerModal","trainingForModal","useHistory","_Fragment","closeButton","time","map","el","index","series_num","goToTraining","trainings","localizer","momentLocalizer","moment","showModal","setShowModal","events","parse","toDate","Calendar","culture","views","selectable","onSelectEvent","e","style","height","width","handleCloseModal","CustomStopwatch","hours","minutes","seconds","start","pause","reset","FinishTrainingModal","showFinishTraining","setShowFinishTraining","handleFinishTraining","useTraining","currentTraining","setCurrentTraining","actualMultiSeries","setActualMultiSeries","actualSingleSeries","setActualSingleSeries","trainingFinished","setTrainingFinished","single_series","extraWeight","setExtraWeight","actualReps","setActualReps","modifyMultiSeries","updatedCurrentTraining","target","handleMovetoAnotherSeries","length","useStopwatch","autoStart","handleExtraWeight","handleReps","visibility","placeholder","string_time","timeToString","training_obj","Object","assign","RemoveTrainingModal","handleDeleteTraining","deleteCurrentTraining","delete","visibleElements","setVisibleElements","removeTrainingModal","setRemoveTrainingModal","differentDayModal","setDifferentDayModal","Formik","_ref","setSubmitting","handleModifyTraining","_ref2","Field","multiseries","toggleVisibility","elementId","prevVisibleElements","includes","filter","faPlus","singleseries","indexv2","Navbar","isMobileNavOpen","setIsMobileNavOpen","faBars","faDumbbell","handleMoveToCreateTraining","handleMovetoGoals","handleMovetoSettings","display","handleMoveToMobileScheduler","handleMoveToMobileCreateTraining","handleMoveToMobileGoals","handleMovetoMobileDimensions","handleMoveToMobileSettings","CreateDimension","jsDate","dateError","setDateError","handleDateForDimensions","useDate","today","converted_date","setDate","setJsDate","convertedDate","setValues","userDimensionsForCreate","handleSendDimension","data_obj","postDimension","useEffect","userDimensions","selected","undefined","keys","userDimensionConfigurationForCompare","element","CompareDimensions","firstDimension","secondDimension","handleFirstDimensionChange","handleSecondDimensionChange","setFirstDimension","setSecondDimension","event","find","x","useCompareDimensions","Select","MenuItem","showCreateDimension","setShowCreateDimension","showCompareDimensions","setShowCompareDimensions","handleShowCreateDimension","handleShowCompareDimensions","disabled","defaultValue","handleCloseCreateDimension","handleShow","handleCloseCompareDimensions","CreateGoal","finishJsDate","handleSendGoals","postGoals","cols","rows","CheckGoal","selectedGoal","finish_date","putGoal","setShowCheckGoal","error","showCheckGoal","FormControlLabel","control","Checkbox","userGoalsCompleted","userGoalsToAchieve","showCreateGoal","setShowCreateGoal","setSelectedGoal","handleShowCreateGoal","handleCheckGoal","goal_obj","handleCloseCreateGoal","useCreateMultiSeries","multiSeries","setMultiSeries","preventDefault","validateSingleSeries","validateSync","abortEarly","formattedErrors","inner","reduce","acc","validationError","path","message","newSingleSeries","prevState","updatedMultiSeries","validateMultiSeries","singleSeriesArray","Array","from","updatedSingleSeries","exerciseObject","CreateMultiSeries","loadExercises","addToSingleSeries","addMultiSingleSeries","handleChangeExercise","AsyncSelect","loadOptions","defaultOptions","defaultExercises","setShowExerciseModal","DisplayMultiSeries","handleRemoveSingleSeries","handleRemoveMultiSeries","multiIndex","singleIndex","splice","useDisplayMultiSeries","CreatedTrainingModal","showCreatedTrainingModal","handleCloseCreatedTrainingModal","CreateExerciseModal","handleCreateExercise","createUserExercise","handleCloseCreateExerciseModal","setDefaultExercises","showCreateExerciseModal","created_training","create_single_training_error","create_single_training_error_message","multiSeriesIndex","singleSeries","setMultiSeriesIndex","setSingleSeries","useCreateTraining","setShowCreatedTrainingModal","validateTraining","DashboardCompletedTrainings","lastCompletedTrainings","completed_training","DashboardLastDimension","DashboardUpcomingTrainings","upcomingTrainings","upcoming_training","getDimensionConfiguration","getUserDimensionsForCreate","getDimensionConfigurationForCompare","loadToken","getLastCompletedTrainings","getUpcomingTrainings","useAuth","cookies","setCookie","useCookies","true_effects_token","Route","exact","component","Dashboard","Goals","Dimensions","Settings","Scheduler","Training","ModifyTraining","CreateTraining","initialState","createUserExerciseError","isAuthenticated","login_error","error_register","tokenloaded","error_register_name","combineReducers","arguments","action","isLoading","isLoaded","localStorage","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","AuthenticateLogo","src","logo","alt","loadUser","handleSetToken","handleMoveToRegister","handleMovetoBack","handleLogin","goBack","useLogin","faArrowLeft","faArrowRight","noValidate","autoComplete","non_field_errors","postRegister","handleMoveToLogin","handleRegister","useRegister","register_error","ReactDOM","render","CookiesProvider","Provider","StrictMode","BrowserRouter","Switch","Login","Register","DefaultContainer","document","getElementById"],"mappings":"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","file":"static/js/main.7c40dcc5.chunk.js","sourcesContent":["export const convertDate = (date) => {\n    {/* Convert date to YYYY-MM-DD Format */}\n    date.setHours(12)\n    const fullDate = date.toISOString().split('T')[0]\n    return fullDate\n}\n\nexport const convertStringToDate = (date) =>{\n    const dateComponents = date.split(\"-\");\n    const myDate = new Date(dateComponents[2], dateComponents[1] - 1, dateComponents[0]);\n    return myDate\n}\n\nexport const handleDateForGoals = (date, setFieldValue) => {\n    const convertedDate = convertDate(date)\n    setFieldValue(\"finishDate\", convertedDate)\n    setFieldValue(\"finishJsDate\", date)\n}\nexport const handleDateForDimensions = (date, setDate, setJsDate) => {\n    const convertedDate = convertDate(date)\n    setDate(convertedDate)\n    setJsDate(date)\n}\n\nexport const timeToString = (hours, minutes, seconds) =>{\n    return `${hours < 10 ? 0: \"\"}${hours}:${minutes < 10 ? 0: \"\"}${minutes}:${seconds < 10 ? 0: \"\"}${seconds}`\n}","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {CloseButton} from \"react-bootstrap\";\nimport {convertDate} from \"../../helpers/function_helpers\";\nimport DatePicker from \"react-datepicker\";\nimport {useFormik} from \"formik\";\nimport {addTrainingToDifferentDayValidation} from \"../../validation/validation\";\n\nconst AddTrainingToDifferentDayModal = (props) => {\n    const {values, setFieldValue, handleSubmit, handleChange, errors} = useFormik({\n        initialValues: {\n            name: props.training.name,\n            date: convertDate(new Date())\n        },\n        validationSchema: addTrainingToDifferentDayValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            let training = props.training\n            training.name = values.name\n            training.date = values.date\n            props.createTraining(training)\n                .then(() => {\n                    props.getTrainings()\n                    props.handleMoveToScheduler(props.history)\n                })\n        },\n    });\n    return (\n        <div>\n            <Modal show={props.show} onHide={() => props.handleClose(false)}>\n                <form onSubmit={handleSubmit}>\n                    <Modal.Header>\n                        <Modal.Title>Stworzono Trening</Modal.Title>\n                        <CloseButton onClick={() => props.handleClose(false)} variant=\"white\"/>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <DatePicker locale='pl'\n                                    name=\"date\"\n                                    value={values.date}\n                                    className=\" animated-datepicker\"\n                                    placeholderText=\"Wybierz date treningu\"\n                                    dateFormat='yyyy-MM-dd'\n                                    onChange={(date) => setFieldValue('date', convertDate(date))\n                                    }/>\n                        {errors.date && <p>{errors.date}</p>}\n                        <div className=\"animatedInput\">\n                            <input onChange={handleChange} name=\"name\" value={values.name} type=\"text\"/>\n                            <span>Nazwa Treningu</span>\n                        </div>\n                        {errors.name && <p>{errors.name}</p>}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button className=\"standard-button\"\n                                type=\"submit\"\n                            // onClick={() => handleAddToNewDate()}\n                        >Dodaj do innego dnia\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddTrainingToDifferentDayModal;\n","import AddTrainingToDifferentDayModal from \"../modify_training/modals/AddTrainingToDifferentDayModal\";\n\nconst yup = require(\"yup\");\n\nexport const createGoalValidation = yup.object().shape({\n    finishDate: yup.string().min(8, \"Wprowadź poprawną date\").required('Wybierz date'),\n    goal: yup.string().min(2, \"Cel jest za krótki\").max(100, \"Cel jest za długi wykorzystaj opis\").required('Pole jest wymagane'),\n    description: yup.string(),\n});\n\nexport const updateGoalValidation = yup.object().shape({\n    finishDate: yup.string().min(8, \"Wprowadź poprawną date\").required('Wybierz date'),\n    goal: yup.string().min(2, \"Cel jest za krótki\").max(100, \"Cel jest za długi wykorzystaj opis\").required('Pole jest wymagane'),\n    description: yup.string(),\n    completed: yup.boolean().required()\n});\n\n\nexport const settingsDimensionValidation = yup.object().shape({\n    id: yup.number().required(),\n    weight: yup.boolean().required(),\n    growth: yup.boolean().required(),\n    left_biceps: yup.boolean().required(),\n    right_biceps: yup.boolean().required(),\n    left_forearm: yup.boolean().required(),\n    right_forearm: yup.boolean().required(),\n    left_leg: yup.boolean().required(),\n    right_leg: yup.boolean().required(),\n    bodyfat: yup.boolean().required(),\n});\n\nexport const createDimensionValidation = yup.object().shape({\n    weight: yup.number().nullable(false).required(\"Waga jest wymagana\"),\n    growth: yup.number().nullable(true),\n    left_biceps: yup.number().nullable(true),\n    right_biceps: yup.number().nullable(true),\n    left_forearm: yup.number().nullable(true),\n    right_forearm: yup.number().nullable(true),\n    left_leg: yup.number().nullable(true),\n    right_leg: yup.number().nullable(true),\n    bodyfat: yup.number().nullable(true),\n})\n\nexport const createMultiSeriesValidation = yup.object().shape({\n    exercise: yup.object().nonNullable(\"Wybierz ćwiczenie\").required(\"Wybierz ćwiczenie\"),\n    extra_weight: yup.number().max(10000, \"Nie no tyle to nie. Tutaj wstaw tego mema. :)\").required(\"Musisz uzupełnić wage\").typeError(\"Dodatkowa waga musi być liczbą\"),\n    rest: yup.number().integer().max(10000).required(\"Musisz uzupełnić czas przerwy\").typeError(\"Odpoczynek musi być liczbą\"),\n    reps: yup.number().required(\"Musisz uzupełnić liczbe powtórzeń\").typeError(\"Liczba powtórzeń musi być liczbą\"),\n    concentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    pause_after_concentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    eccentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    pause_after_eccentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    series_count: yup.number().integer().min(1, \"Liczba jest za mała\").max(50, \"Liczba serii jest za duża\").typeError(\"Liczba serii musi być liczbą całkowitą od 0 od 100\"),\n})\n\nexport const createSingleSeriesValidation = yup.object().shape({\n    exercise: yup.object().nonNullable(\"Wybierz ćwiczenie\").required(\"To pole jest wymagane\"),\n    extra_weight: yup.number().max(10000, \"Nie no tyle to nie. Tutaj wstaw tego mema. :)\").required(\"Musisz uzupełnić wage\").typeError(\"Dodatkowa waga musi być liczbą\"),\n    rest: yup.number().integer().max(10000).required(\"Musisz uzupełnić czas przerwy\").typeError(\"Odpoczynek musi być liczbą całkowitą\"),\n    reps: yup.number().required(\"Musisz uzupełnić liczbe powtórzeń\").typeError(\"Liczba powtórzeń musi być liczbą\"),\n    concentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    pause_after_concentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    eccentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n    pause_after_eccentric_phase: yup.number().typeError(\"Fazy muszą być liczbami\"),\n})\n\n\nexport const createTrainingValidation = yup.object().shape({\n    name: yup.string().min(2, \"Nazwa jest za krótka\").max(100, \"Nazwa jest za długa wykorzystaj opis\").required('Pole nazwa jest wymagane'),\n    date: yup.string().min(2, \"Musisz wybrać date\").required(\"Pole data jest wymagane\"),\n    description: yup.string().max(5000, \"Opis jest za długi\"),\n    multi_series: yup.array().min(1, 'Przynajmniej jedna seria jest wymagana')\n\n})\n\nexport const loginUserValidation = yup.object().shape({\n    username: yup.string().min(2, \"Nazwa użytkownika jest za krótka\").max(100, \"Nazwa użytkownika jest za długa \").required('Pole username jest wymagane'),\n    password: yup.string().min(2, \"Hasło jest za krótkie\").max(100, \"Hasło jest za długie\").required('Pole hasło jest wymagane'),\n})\n\nexport const registerUserValidation = yup.object().shape({\n    username: yup.string().min(2, \"Nazwa użytkownika jest za krótka\").max(100, \"Nazwa użytkownika jest za długa \").required('Pole username jest wymagane'),\n    email: yup.string().email('Podany adres e-mail nie jest prawidłowy.').required('Adres e-mail jest wymagany.'),\n    password: yup.string().min(2, \"Hasło jest za krótkie\").max(100, \"Hasło jest za długie\").required('Pole hasło jest wymagane'),\n    password2: yup.string()\n        .oneOf([yup.ref('password'), null], 'Hasła muszą być identyczne.')\n        .required('Potwierdzenie hasła jest wymagane.'),\n})\n\nexport const createExerciseModalValidation = yup.object().shape({\n    name: yup.string().required('Stare hasło jest wymagane'),\n    password: yup.string().min(2, \"Hasło jest za krótkie\").max(100, \"Hasło jest za długie\")\n        // .min(2, \"Nazwa ćwiczenia jest za krótka\")\n})\n\nexport const changePasswordValidation = yup.object().shape({\n    old_password: yup.string().required('Pole stare hasło jest wymagane'),\n    new_password1: yup.string().min(2, \"Hasło jest za krótkie\").max(100, \"Hasło jest za długie\").required('Pole hasło jest wymagane'),\n    new_password2: yup.string()\n        .oneOf([yup.ref('new_password1'), null], 'Hasła muszą być identyczne.')\n        .required('Potwierdzenie hasła jest wymagane.'),\n})\n\nexport const addTrainingToDifferentDayValidation = yup.object().shape({\n    name: yup.string().min(2, \"Nazwa treningu jest za krótka\").required(\"Pole name nie może być puste\"),\n    date: yup.string().min(8, \"Data się nie zgadza\").required(\"Pole data nie może być puste\")\n})","import React from 'react';\nimport {useFormik} from \"formik\";\nimport {changePasswordValidation} from \"../validation/validation\";\n\nexport const SettingsPasswordItems = (props) => {\n    const {values, handleSubmit, handleChange, setErrors, errors} = useFormik({\n        initialValues: {\n            old_password: \"\", new_password1: \"\", new_password2: \"\",\n        },\n        validationSchema: changePasswordValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            props.changePassword(values)\n                .catch((err) => {\n                    setErrors(err.response.data)\n                })\n        },\n    });\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 className=\"settings__title\">Zmiana hasła</h2>\n            <div className=\"animatedInput\">\n                <input name=\"old_password\" onChange={handleChange} value={values.old_password} required={true}\n                       type=\"password\"/>\n                <span>Stare hasło</span>\n            </div>\n            {errors.old_password && <p className=\"settings__errors\">{errors.old_password}</p>}\n            <div className=\"animatedInput\">\n                <input name=\"new_password1\" onChange={handleChange} value={values.new_password1} required={true}\n                       type=\"password\"/>\n                <span>Nowe hasło</span>\n            </div>\n            {errors.new_password1 && <p className=\"settings__errors\">{errors.new_password1}</p>}\n            <div className=\"animatedInput\">\n                <input name=\"new_password2\" onChange={handleChange} value={values.new_password2} required={true}\n                       type=\"password\"/>\n                <span>Powtórz nowe hasło</span>\n            </div>\n            {errors.new_password2 && <p className=\"settings__errors\">{errors.new_password2}</p>}\n            <div className=\"settings__accept-button\">\n                <button className=\"standard-button\" type=\"submit\">Zapisz ustawienia</button>\n            </div>\n        </form>\n    );\n};\n","export const POST_LOGIN = 'POST_LOGIN';\r\nexport const POST_REGISTER = 'POST_REGISTER';\r\nexport const POST_LOGOUT = 'POST_LOGOUT';\r\nexport const POST_LOGOUT_AUTH = 'POST_LOGOUT_AUTH';\r\nexport const GET_USER_DIMENSIONS_SUCCESS = 'GET_USER_DIMENSIONS_SUCCESS';\r\nexport const GET_TRAININGS_SUCCESS = 'GET_TRAININGS_SUCCESS';\r\nexport const GET_USER_COMPLETED_GOALS_SUCCESS = 'GET_USER_COMPLETED_GOALS_SUCCESS';\r\nexport const GET_USER_GOALS_TO_ACHIEVE_SUCCESS = 'GET_USER_GOALS_TO_ACHIEVE_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const PUT_USER_DIMENSION_CONFIGURATION_SUCCESS = 'PUT_USER_DIMENSION_CONFIGURATION_SUCCESS';\r\nexport const GET_USER_DIMENSION_CONFIGURATION_SUCCESS = 'GET_USER_DIMENSION_CONFIGURATION_SUCCESS';\r\nexport const GET_USER_DIMENSIONS_FOR_CREATE = 'GET_USER_DIMENSIONS_FOR_CREATE';\r\nexport const GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS = 'GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS';\r\nexport const TOKEN_LOADED = 'TOKEN_LOADED';\r\nexport const GET_SINGLE_TRAINING_SUCCESS = 'GET_SINGLE_TRAINING_SUCCESS';\r\nexport const GET_CURRENT_TRAINING_SUCCESS = 'GET_CURRENT_TRAINING_SUCCESS';\r\nexport const UPDATE_SINGLE_TRAINING_SUCCESS = 'UPDATE_SINGLE_TRAINING_SUCCESS';\r\nexport const CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS = 'CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS';\r\nexport const CREATE_SINGLE_TRAINING_ERROR = 'CREATE_SINGLE_TRAINING_ERROR';\r\nexport const CREATE_USER_EXERCISE_ERROR = 'CREATE_USER_EXERCISE_ERROR';\r\nexport const GET_LAST_COMPLETED_TRAININGS = 'GET_LAST_COMPLETED_TRAININGS';\r\nexport const GET_UPCOMING_TRAININGS = 'GET_UPCOMING_TRAININGS';","import {\r\n    CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS,\r\n    GET_LAST_COMPLETED_TRAININGS,\r\n    GET_SINGLE_TRAINING_SUCCESS,\r\n    GET_TRAININGS_SUCCESS,\r\n    GET_UPCOMING_TRAININGS,\r\n    GET_USER_COMPLETED_GOALS_SUCCESS,\r\n    GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS,\r\n    GET_USER_DIMENSION_CONFIGURATION_SUCCESS,\r\n    GET_USER_DIMENSIONS_FOR_CREATE,\r\n    GET_USER_DIMENSIONS_SUCCESS,\r\n    GET_USER_GOALS_TO_ACHIEVE_SUCCESS,\r\n    PUT_USER_DIMENSION_CONFIGURATION_SUCCESS,\r\n    UPDATE_SINGLE_TRAINING_SUCCESS,\r\n} from './types';\r\nimport axios from 'axios';\r\n\r\nconst TRUEEFFECTS_URL = process.env.REACT_APP_TRUEEFFECTS_URL\r\nexport const postGoal = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/user_goal/`, data)\r\n        .then(res => {\r\n            alert(\"Cel został dodany\")\r\n        })\r\n}\r\n\r\nexport const getCompletedGoals = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/user_goal/completed/`)\r\n        .then(res => dispatch({\r\n            type: GET_USER_COMPLETED_GOALS_SUCCESS,\r\n            payload: res.data,\r\n        }));\r\n}\r\n\r\n\r\nexport const getGoalsToAchieve = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/user_goal/`)\r\n        .then(res => dispatch({\r\n            type: GET_USER_GOALS_TO_ACHIEVE_SUCCESS,\r\n            payload: res.data,\r\n        }));\r\n}\r\n\r\nexport const putGoal = (data, id) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.put(`${TRUEEFFECTS_URL}/api/v1/user_goal/${id}/`, data)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            return err\r\n        })\r\n}\r\n\r\n\r\nexport const postDimension = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/user_dimension/`, data)\r\n        .then(res => {\r\n            alert(\"Pomiar został dodany\")\r\n        })\r\n}\r\n\r\nexport const putDimension = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.put(`${TRUEEFFECTS_URL}/api/v1/user_dimension/`, data)\r\n        .then(\r\n            alert(\"Pomiar został zaaktualizowany\")\r\n        )\r\n}\r\n\r\nexport const getDimensions = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/user_dimension/`)\r\n        .then(res => dispatch({\r\n            type: GET_USER_DIMENSIONS_SUCCESS,\r\n            payload: res.data,\r\n        }));\r\n}\r\n\r\nexport const getUserDimensionsForCreate = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/user_dimension/get_user_dimensions_for_create/`)\r\n        .then(res => dispatch({\r\n            type: GET_USER_DIMENSIONS_FOR_CREATE,\r\n            payload: res.data,\r\n        }));\r\n}\r\n\r\nexport const getTrainings = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/trainings/`)\r\n        .then(res => dispatch({\r\n            type: GET_TRAININGS_SUCCESS,\r\n            payload: res,\r\n        }));\r\n}\r\n\r\n// #TODO Think about it\r\nexport const postSingleSeries = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/training/singleseries/`, data)\r\n        .then(res => {\r\n            return res.data\r\n        });\r\n}\r\n\r\nexport const postMultiSeries = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/training/multiseries/`, data)\r\n        .then(res => {\r\n            return res.data\r\n        });\r\n}\r\n\r\nexport const putDimensionConfiguration = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.put(`${TRUEEFFECTS_URL}/api/v1/user_dimension_configuration/${data.id}/`, data)\r\n        .then(res => dispatch({\r\n            type: PUT_USER_DIMENSION_CONFIGURATION_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            console.log(err.response)\r\n        })\r\n}\r\n\r\nexport const getDimensionConfiguration = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/user_dimension_configuration/get_user_dimension_config/`)\r\n        .then(res => dispatch({\r\n            type: GET_USER_DIMENSION_CONFIGURATION_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            console.log(err.response)\r\n        })\r\n\r\n}\r\n\r\nexport const getDimensionConfigurationForCompare = () => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/user_dimension_configuration/get_user_dimensions_configuration_for_compare/`)\r\n        .then(res => dispatch({\r\n            type: GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            console.log(err.response)\r\n        })\r\n\r\n}\r\n\r\n\r\nexport const getSingleTraining = (id) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/single_training/${id}/get_training_by_id/`)\r\n        .then(res => dispatch({\r\n            type: GET_SINGLE_TRAINING_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const updateTraining = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.put(`${TRUEEFFECTS_URL}/api/v1/single_training/${data.id}/update_training/`, data)\r\n        .then(res => dispatch({\r\n            type: UPDATE_SINGLE_TRAINING_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const createTraining = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/single_training/`, data)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            // return err.response.data\r\n            throw err\r\n        })\r\n    // .then(res => dispatch({\r\n    //     type: CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS,\r\n    //     payload: res.data\r\n    // }))\r\n    // .catch(err => {\r\n    //     dispatch({\r\n    //         type: CREATE_SINGLE_TRAINING_ERROR,\r\n    //         payload: err.response.data\r\n    //     })\r\n    // })\r\n\r\n}\r\n\r\nexport const deleteCurrentTraining = (id) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`${TRUEEFFECTS_URL}/api/v1/single_training/${id}/`)\r\n        .then(res => dispatch({\r\n            type: CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const getExercises = (param) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/exercise/?name=${param}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            return err\r\n        })\r\n}\r\nexport const createUserExercise = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/exercise/post_user_exercise/`, data)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            // return err.response.data\r\n            throw err\r\n        })\r\n}\r\n\r\nexport const getLastCompletedTrainings = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/trainings/get_last_completed_trainings/`)\r\n        .then(res => dispatch({\r\n            type: GET_LAST_COMPLETED_TRAININGS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n\r\nexport const getUpcomingTrainings = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get(`${TRUEEFFECTS_URL}/api/v1/trainings/get_upcoming_trainings/`)\r\n        .then(res => dispatch({\r\n            type: GET_UPCOMING_TRAININGS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}","import React from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {useFormik} from \"formik\";\nimport {connect} from \"react-redux\";\nimport {putDimensionConfiguration} from \"../../redux/actions/trainingActions\";\nimport {settingsDimensionValidation} from \"../validation/validation\";\n\nconst SettingsDimensionItems = (props) => {\n\n\n    const {values, handleSubmit, handleChange} = useFormik({\n        initialValues: {\n            id: props.userDimensionConfiguration.id,\n            weight: props.userDimensionConfiguration.weight,\n            growth: props.userDimensionConfiguration.growth,\n            left_biceps: props.userDimensionConfiguration.left_biceps,\n            right_biceps: props.userDimensionConfiguration.right_biceps,\n            left_forearm: props.userDimensionConfiguration.left_forearm,\n            right_forearm: props.userDimensionConfiguration.right_forearm,\n            left_leg: props.userDimensionConfiguration.left_leg,\n            right_leg: props.userDimensionConfiguration.right_leg,\n            bodyfat: props.userDimensionConfiguration.bodyfat\n        },\n        validationSchema: settingsDimensionValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            console.log(\"onSubmit\")\n            console.log(values)\n            handlePutSettingsDimensions(values)\n        },\n\n    });\n\n    const handlePutSettingsDimensions = async (values) => {\n        const data = {\n            \"id\": values.id,\n            \"weight\": values.weight,\n            \"growth\": values.growth,\n            \"left_biceps\": values.left_biceps,\n            \"right_biceps\": values.right_biceps,\n            \"left_forearm\": values.left_forearm,\n            \"right_forearm\": values.right_forearm,\n            \"left_leg\": values.left_leg,\n            \"right_leg\": values.right_leg,\n            \"bodyfat\": values.bodyfat\n        }\n        await props.putDimensionConfiguration(data)\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/*<Form onSubmit={handleSubmit}>*/}\n            <h2 className=\"settings__title\">Ustawienia pomiarów</h2>\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"weight\"\n                name=\"weight\"\n                onChange={handleChange}\n                checked={values.weight}\n                label=\"Wyświetlaj wagę\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"growth\"\n                name=\"growth\"\n                onChange={handleChange}\n                checked={values.growth}\n                label=\"Wyświetlaj wzrost\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"left_biceps\"\n                name=\"left_biceps\"\n                onChange={handleChange}\n                checked={values.left_biceps}\n                label=\"Wyświetlaj lewy biceps\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"right_biceps\"\n                name=\"right_biceps\"\n                onChange={handleChange}\n                checked={values.right_biceps}\n                label=\"Wyświetlaj prawy biceps\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"left_forearm\"\n                name=\"left_forearm\"\n                onChange={handleChange}\n                checked={values.left_forearm}\n                label=\"Wyświetlaj lewe przedramię\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"right_forearm\"\n                name=\"right_forearm\"\n                onChange={handleChange}\n                checked={values.right_forearm}\n                label=\"Wyświetlaj prawe przedramię\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"left_leg\"\n                name=\"left_leg\"\n                onChange={handleChange}\n                checked={values.left_leg}\n                label=\"Wyświetlaj lewą nogę\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"right_leg\"\n                name=\"right_leg\"\n                onChange={handleChange}\n                checked={values.right_leg}\n                label=\"Wyświetlaj prawą nogę\"\n            />\n            <Form.Check\n                type=\"switch\"\n                className=\"settings__dimensions__element\"\n                id=\"bodyfat\"\n                name=\"bodyfat\"\n                onChange={handleChange}\n                checked={values.bodyfat}\n                label=\"Wyświetlaj bodyfat\"\n            />\n            <div className=\"settings__accept-button\">\n                <button className=\"standard-button\" type=\"submit\">Zapisz ustawienia</button>\n            </div>\n        </form>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userDimensionConfiguration: state.training.userDimensionConfiguration,\n    }\n}\nexport default connect(mapStateToProps, {putDimensionConfiguration})(SettingsDimensionItems);\n","import {\r\n    AUTH_ERROR,\r\n    LOGIN_ERROR,\r\n    POST_LOGOUT_AUTH,\r\n    POST_REGISTER,\r\n    REGISTER_ERROR,\r\n    TOKEN_LOADED,\r\n    USER_LOADED,\r\n    USER_LOADING\r\n} from './types';\r\nimport axios from 'axios';\r\n\r\nconst TRUEEFFECTS_URL = process.env.REACT_APP_TRUEEFFECTS_URL\r\n\r\n\r\nexport const changePassword = (data) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`${TRUEEFFECTS_URL}/api/v1/change_password/`, data)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n                throw err\r\n            }\r\n        )\r\n\r\n}\r\nexport const postRegister = (data, handleSetToken) => dispatch => {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    axios.post(`${TRUEEFFECTS_URL}/api/v1/register/`, data)\r\n        .then(res => {\r\n            handleSetToken(res.data.token)\r\n            return res\r\n        })\r\n        .then(res => dispatch(\r\n            {\r\n                type: POST_REGISTER,\r\n                payload: res.data\r\n            }))\r\n        .catch((err) => dispatch({\r\n            type: REGISTER_ERROR,\r\n            payload: err.response.data\r\n        }))\r\n}\r\nexport const postLogoutAuth = (removeCookie) => dispatch => {\r\n    removeCookie(\"true_effects_token\")\r\n    dispatch({\r\n        type: POST_LOGOUT_AUTH\r\n    })\r\n}\r\nexport const loadUser = (data, handleSetToken) => (dispatch) => {\r\n    dispatch({type: USER_LOADING});\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    axios.post(`${TRUEEFFECTS_URL}/api/v1/login/`, data)\r\n        // .then(res =>{\r\n        //     handleSetToken(res.data.token)\r\n        //     return res\r\n        // })\r\n        .then(res => {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data\r\n            })\r\n        }).catch(err => {\r\n        dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n}\r\nexport const logoutUser = (handleRemoveToken) => (dispatch, getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    axios.get(`${TRUEEFFECTS_URL}/api/v1/logout/`)\r\n        .then(res => {\r\n            // handleRemoveToken()\r\n            handleRemoveToken()\r\n            window.localStorage.removeItem('token')\r\n            window.localStorage.removeItem('name')\r\n            return res\r\n        })\r\n        .then(res => dispatch({\r\n            type: AUTH_ERROR\r\n        }))\r\n\r\n}\r\n\r\nexport const loadToken = (token) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: TOKEN_LOADED,\r\n        payload: token\r\n    });\r\n}","import React, {useState} from 'react';\nimport {SettingsPasswordItems} from \"../settings_components/SettingsPasswordItems\";\nimport SettingsDimensionItems from \"../settings_components/SettingsDimensionItems\";\nimport \"../../new_sass/app_settings.scss\";\nimport {faLock} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faWeight} from \"@fortawesome/fontawesome-free-solid\";\nimport {connect} from \"react-redux\";\nimport {changePassword, postLogoutAuth} from \"../../redux/actions/authenticationActions\";\n\n\nconst Settings = (props) => {\n    const [activeState, setActiveState] = useState('DIMENSIONS')\n    return (\n        <div className=\"settings\">\n            <h1 className=\"title settings__title\">Ustawienia</h1>\n            <div className=\"menu settings__menu\">\n                <div className=\"menu__elements\">\n                    <div className=\"choices menu__choices\">\n                        <div className=\"choices__element\"\n                             onClick={() => setActiveState(\"DIMENSIONS\")}><FontAwesomeIcon size=\"2x\" icon={faWeight}/>\n                        </div>\n                        <div className=\"choices__element\"\n                             onClick={() => setActiveState(\"PASSWORD\")}><FontAwesomeIcon size=\"2x\" icon={faLock}/></div>\n                    </div>\n                    <div className=\"menu__options\">\n                        {activeState === 'DIMENSIONS' && <SettingsDimensionItems/>}\n                        {activeState === 'PASSWORD' && <SettingsPasswordItems changePassword={props.changePassword}\n                                                                              postLogoutAuth={props.postLogoutAuth}/>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, {changePassword, postLogoutAuth})(Settings);\n","\nexport const handleMovetoHome = (history) => {\n    history.push(\"/\");\n}\nexport const handleMovetoScheduler = (history) => {\n    history.push(\"/schedule\");\n}\nexport const handleMovetoCreator = (history) => {\n    history.push(\"/createtraining\");\n}\nexport const handleMovetoMeasurements = (history) => {\n    history.push(\"/addmeasurements\");\n}\nexport const handleMovetoAllMeasurements = (history) => {\n    history.push(\"/displaymeasurements\");\n}\n\nexport const handleMovetoGoalsAndDimensions = (history) =>{\n    history.push(\"/goals_and_dimensions\")\n}\n\nexport const handleMovetoDimensions = (history) =>{\n    history.push(\"/dimensions\")\n}\n\nexport const handleMovetoMobileDimensions = (history, isMobileNavOpen, setIsMobileNavOpen) =>{\n    history.push(\"/dimensions\")\n    setIsMobileNavOpen(!isMobileNavOpen)\n}\n\nexport const handleMovetoAddGoals = (history) => {\n    history.push(\"/addgoals\");\n}\n\nexport const handleMoveToScheduler = (history) =>{\n    history.push(\"/scheduler\");\n}\n\nexport const handleMoveToMobileScheduler = (history, isMobileNavOpen, setIsMobileNavOpen) =>{\n    history.push(\"/scheduler\");\n    setIsMobileNavOpen(!isMobileNavOpen)\n}\n\nexport const handleMoveToTraining = (history) => {\n    history.push(\"/training\")\n}\n\nexport const handleMoveToMobileTraining = (history, isMobileNavOpen, setIsMobileNavOpen) =>{\n    history.push(\"/training\");\n    setIsMobileNavOpen(!isMobileNavOpen)\n}\n\n\nexport const handleMovetoSettings = (history) =>{\n    history.push(\"/settings\")\n}\n\nexport const handleMoveToMobileSettings = (history, isMobileNavOpen, setIsMobileNavOpen) =>{\n    history.push(\"/settings\");\n    setIsMobileNavOpen(!isMobileNavOpen)\n}\n\nexport const handleMovetoGoals = (history) =>{\n    history.push(\"/goals\")\n}\n\nexport const handleMoveToMobileGoals = (history, isMobileNavOpen, setIsMobileNavOpen) =>{\n    history.push(\"/goals\");\n    setIsMobileNavOpen(!isMobileNavOpen)\n}\n\n\nexport const handleMoveToModifyTraining = (history) =>{\n    history.push(\"/modify_training\")\n}\n\nexport const handleMoveToCreateTraining = (history) =>{\n    history.push(\"/create_training\")\n}\n\nexport const handleMoveToMobileCreateTraining = (history, isMobileNavOpen, setIsMobileNavOpen) =>{\n    history.push(\"/create_training\");\n    setIsMobileNavOpen(!isMobileNavOpen)\n}","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {handleMoveToModifyTraining, handleMoveToTraining} from \"../helpers/history_helpers\";\nimport {useHistory} from \"react-router-dom\";\n\nconst DisplayTrainingOnSchedulerModal = (props) => {\n    const {trainingForModal} = props\n    const history = useHistory()\n\n    const goToTraining = () => {\n        handleMoveToTraining(props.history)\n    }\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Trening</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Nazwa: {trainingForModal.name}\n                    Data: {trainingForModal.date}\n                    Czas: {trainingForModal.time}\n                    Opis: {trainingForModal.description}\n                    Serie: {trainingForModal.multi_series.map((el, index) =>\n                    <p key={index}>{el.series_num}</p>\n                )}\n\n                </Modal.Body>\n                <Modal.Footer>\n                    {/*<button className=\"standard-button\" type=\"submit\">Save</button>*/}\n                    <button className=\"standard-button\">Usuń trening</button>\n                    <button className=\"standard-button\">Dodaj trening do innego dnia</button>\n                    <button className=\"standard-button\" onClick={goToTraining}>Ćwicz</button>\n                    <button className=\"standard-button\" onClick={() => handleMoveToModifyTraining(history)}>Modyfikuj\n                        trening\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default DisplayTrainingOnSchedulerModal;\n","import React, {useState} from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport 'moment/locale/pl';\nimport \"../../new_sass/scheduler.scss\"\nimport {getSingleTraining, getTrainings} from \"../../redux/actions/trainingActions\";\nimport DisplayTrainingOnSchedulerModal from \"../scheduler_components/DisplayTrainingOnSchedulerModal\";\nimport {useHistory} from \"react-router-dom\";\nrequire('moment/locale/pl.js')\n\nconst Scheduler = (props) => {\n    const history = useHistory()\n    const localizer = momentLocalizer(moment)\n    const [showModal, setShowModal] = useState(false)\n    let events = []\n    props.trainings.map(el => {\n        events.push({\n            'id': el.id,\n            'title': el.name,\n            'date': el.date,\n            'start': moment(Date.parse(el.date)).toDate(),\n            'end': moment(Date.parse(el.date)).toDate()\n        })\n    })\n    const handleCloseModal = () => {\n        setShowModal(true)\n    }\n    const handleSelect = async (e) => {\n        await props.getSingleTraining(e.id)\n        await setShowModal(true)\n    }\n    return (\n        <div className=\"scheduler\">\n            <div className=\"scheduler__title\">\n                Kalendarz treningu\n            </div>\n            <div className=\"schedule\">\n                <Calendar culture='pl-PL' views={['month']} selectable={true}\n                          events={events}\n                          onSelectEvent={handleSelect}\n                          localizer={localizer} style={{height: 900, width: '100%'}}/>\n                {props.trainingForModal &&\n                    <DisplayTrainingOnSchedulerModal history={history} trainingForModal={props.trainingForModal}\n                                                     show={showModal} handleClose={handleCloseModal}\n                                                     getSingleTraining={getSingleTraining}\n                                                     trainingForModal={props.trainingForModal}/>}\n            </div>\n\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        trainings: state.training.trainings.data,\n        trainingForModal: state.training.trainingForModal\n    }\n}\nexport default connect(mapStateToProps, {getTrainings, getSingleTraining})(Scheduler);\n","import React from 'react';\n\nconst CustomStopwatch = (props) => {\n    return (\n        <div className=\"stopwatch\">\n            <div className=\"stopwatch__timer\">\n                <span>{props.hours < 10 && 0}{props.hours}:{props.minutes < 10 && 0}{props.minutes}:{props.seconds < 10 && 0}{props.seconds}</span>\n            </div>\n            <div className=\"stopwatch__buttons\">\n                <button className=\"stopwatch__button square-buttons\" id=\"start\" onClick={props.start}>Start</button>\n                <button className=\"stopwatch__button square-buttons\" id=\"pause\" onClick={props.pause}>Pauza</button>\n                <button className=\"stopwatch__button square-buttons\" id=\"reset\" onClick={props.reset}>Reset</button>\n            </div>\n        </div>\n    );\n};\n\nexport default CustomStopwatch;\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {CloseButton} from \"react-bootstrap\";\n\nconst FinishTrainingModal = (props) => {\n    return (\n        <div className=\"finish-modal training__finish-modal\">\n            <Modal show={props.showFinishTraining} onHide={() => props.setShowFinishTraining(false)}>\n                <Modal.Header>\n                    <Modal.Title>Zakończ trening</Modal.Title>\n                    <CloseButton onClick={() => props.setShowFinishTraining(false)} variant=\"white\"/>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>Jeśli chcesz zakończyć i zapisać trening kliknij przycisk \"Zakończ trening\"</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"standard-button\"\n                            onClick={props.handleFinishTraining}>Zakończ trening\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default FinishTrainingModal;\n","import {useState} from \"react\";\n\nexport const useTraining = (props) => {\n    const {training} = props\n    const [currentTraining, setCurrentTraining] = useState(training)\n    const [actualMultiSeries, setActualMultiSeries] = useState(0)\n    const [actualSingleSeries, setActualSingleSeries] = useState(0)\n    const [trainingFinished, setTrainingFinished] = useState(false)\n    const {multi_series} = currentTraining\n    const {\n        concentric_phase,\n        pause_after_concentric_phase,\n        eccentric_phase,\n        pause_after_eccentric_phase,\n        extra_weight,\n        reps\n    } = multi_series[actualMultiSeries].single_series[actualSingleSeries]\n\n    const [extraWeight, setExtraWeight] = useState(extra_weight)\n    const [actualReps, setActualReps] = useState(reps)\n    const modifyMultiSeries = () => {\n        const updatedCurrentTraining = {...currentTraining}\n        updatedCurrentTraining.multi_series[actualMultiSeries].single_series[actualSingleSeries].extra_weight = extraWeight\n        // reps\n        updatedCurrentTraining.multi_series[actualMultiSeries].single_series[actualSingleSeries].reps = actualReps\n        setCurrentTraining(updatedCurrentTraining)\n    }\n\n\n    const handleExtraWeight = (e) => {\n        setExtraWeight(e.target.value)\n    }\n    const handleReps = (e) => {\n        setActualReps(e.target.value)\n    }\n    const setAnotherSeries = () => {\n        setActualSingleSeries(actualSingleSeries + 1)\n        setExtraWeight(multi_series[actualMultiSeries].single_series[actualSingleSeries + 1].extra_weight)\n        setActualReps(multi_series[actualMultiSeries].single_series[actualSingleSeries + 1].reps)\n    }\n    const setAnotherMultiSeries = () => {\n        setActualSingleSeries(0)\n        setActualMultiSeries(actualMultiSeries + 1)\n        setExtraWeight(multi_series[actualMultiSeries + 1].single_series[0].extra_weight)\n        setActualReps(multi_series[actualMultiSeries + 1].single_series[0].reps)\n    }\n\n\n    const handleMovetoAnotherSeries = () => {\n        if (trainingFinished) {\n            return\n        }\n        if (actualSingleSeries < multi_series[actualMultiSeries].single_series.length - 1) {\n            modifyMultiSeries()\n            setAnotherSeries()\n        } else {\n\n            if (actualMultiSeries < multi_series.length - 1) {\n                modifyMultiSeries()\n                setAnotherMultiSeries()\n            } else {\n                if (trainingFinished === false) {\n                    modifyMultiSeries()\n                    setTrainingFinished(true)\n                    alert(\"Zakończono trening\")\n                }\n            }\n        }\n    }\n\n    return [concentric_phase, pause_after_concentric_phase, eccentric_phase, pause_after_eccentric_phase,\n        extra_weight, reps, extraWeight, actualReps, multi_series, actualMultiSeries, actualSingleSeries,\n        handleExtraWeight, handleReps, handleMovetoAnotherSeries, modifyMultiSeries]\n}","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {updateTraining} from \"../../redux/actions/trainingActions\";\nimport \"../../new_sass/training.scss\";\nimport {useStopwatch} from \"react-timer-hook\";\nimport CustomStopwatch from \"../training_components/CustomStopwatch\";\nimport {handleMoveToScheduler} from \"../helpers/history_helpers\";\nimport {timeToString} from \"../helpers/function_helpers\";\nimport FinishTrainingModal from \"../training_components/modals/FinishTrainingModal\";\nimport {useHistory} from \"react-router-dom\";\nimport {useTraining} from \"../hooks/training/useTraining\";\n\nconst Training = (props) => {\n        const history = useHistory()\n        const [showFinishTraining, setShowFinishTraining] = useState(false)\n        const {\n            seconds, minutes, hours, start, pause, reset,\n        } = useStopwatch({autoStart: false});\n\n        const [concentric_phase, pause_after_concentric_phase, eccentric_phase, pause_after_eccentric_phase, extra_weight,\n            reps, extraWeight, actualReps, multi_series, actualMultiSeries, actualSingleSeries,\n            handleExtraWeight, handleReps, handleMovetoAnotherSeries, modifyMultiSeries] = useTraining(props)\n\n\n        const handleFinishTraining = async () => {\n            modifyMultiSeries()\n            const string_time = timeToString(hours, minutes, seconds)\n            let training_obj = Object.assign({}, props.training)\n            training_obj.multi_series = multi_series\n            training_obj.time = string_time\n            await props.updateTraining(training_obj)\n            await handleMoveToScheduler(history)\n        }\n        return (\n            <div className=\"training\">\n                <div className=\"header training__header\">\n                    <div className=\"header--previousexercise\">\n                        <div\n                            style={{visibility: typeof multi_series[actualMultiSeries - 1] !== \"undefined\" ? 'visible' : 'hidden'}}\n                            className=\"header__label\">\n                            Poprzednie ćwiczenie\n                        </div>\n                        <div\n                            style={{visibility: typeof multi_series[actualMultiSeries - 1] !== \"undefined\" ? 'visible' : 'hidden'}}\n                            className=\"header__name\">\n                            {typeof multi_series[actualMultiSeries - 1] !== \"undefined\" && multi_series[actualMultiSeries - 1].exercise.name}\n                        </div>\n                    </div>\n                    <div className=\"header--nextexercise\">\n                        <div\n                            style={{visibility: typeof multi_series[actualMultiSeries + 1] !== \"undefined\" ? 'visible' : 'hidden'}}\n                            className=\"header__label\">Następne ćwiczenie\n                            {/*<FontAwesomeIcon icon={faArrowRight}/>*/}\n                        </div>\n                        <div\n                            style={{visibility: typeof multi_series[actualMultiSeries + 1] !== \"undefined\" ? 'visible' : 'hidden'}}\n                            className=\"header__name\">\n                            {typeof multi_series[actualMultiSeries + 1] !== \"undefined\" && multi_series[actualMultiSeries + 1].exercise.name}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"stoper training__stoper\">\n                    <div className=\"stoper__label\">Aktualne Ćwiczenie</div>\n                    <div\n                        className=\"stoper__name\">\n                        {multi_series[actualMultiSeries].exercise.name}\n                    </div>\n                    <div className=\"stoper__stopwatch\">\n                        <CustomStopwatch\n                            seconds={seconds} minutes={minutes} hours={hours} start={start} pause={pause} reset={reset}\n                        />\n                    </div>\n\n                    {/*<div className=\"\">*/}\n                    {/*    <div className=\"\"*/}\n                    {/*        // style={{visibility: endtraining ? 'hidden' : 'visible'}}*/}\n                    {/*    >*/}\n                    {/*        /!*{training.training[`${series}`].reps.map(function (item, index) {*!/*/}\n                    {/*        /!*        if (index < singleSeries + 1) {*!/*/}\n                    {/*        /!*            return (*!/*/}\n                    {/*        /!*                <Checkbox checked={true}/>*!/*/}\n                    {/*        /!*            )*!/*/}\n                    {/*        /!*        } else {*!/*/}\n                    {/*        /!*            return (*!/*/}\n                    {/*        /!*                <Checkbox disabled checked={false}/>*!/*/}\n                    {/*        /!*            )*!/*/}\n                    {/*        /!*        }*!/*/}\n                    {/*        /!*    }*!/*/}\n                    {/*        /!*)}*!/*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"\"*/}\n                    {/*        // style={{visibility: endtraining ? 'hidden' : 'visible'}}*/}\n                    {/*    >*/}\n                    {/*        /!*Seria {singleSeries + 1}/{training.training[`${series}`].reps.length}*!/*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n                </div>\n                <div className=\"content training__content\">\n                    <div className=\"row content__row\">\n                        <div className=\"row__label\">Fazy</div>\n                        <div\n                            className=\"row__name\">{concentric_phase}/{pause_after_concentric_phase}/{eccentric_phase}/{pause_after_eccentric_phase}</div>\n                    </div>\n                    <div className=\"row content__row\">\n                        <div className=\"row__label\">Ciężar dodatkowy</div>\n                        <div className=\"modify-data row__modify-data\">\n                            <input\n                                className=\"modify-data__input\"\n                                onChange={handleExtraWeight}\n                                placeholder={extra_weight}\n                                value={extraWeight}\n                                id=\"actualreps\" min=\"0\"\n                                max=\"10000\"/>\n                            <div className=\"modify-data__display-old\">/ {extra_weight} kg</div>\n                        </div>\n                    </div>\n                    <div className=\"row content__row\">\n\n                        <div className=\"row__label\">Powtórzenia</div>\n                        <div className=\"modify-data row__modify-data\">\n                            <input\n                                className=\"modify-data__input\"\n                                placeholder={reps}\n                                value={actualReps}\n                                onChange={handleReps}\n                                id=\"actualreps\" min=\"0\"\n                                max=\"10000\"/>\n                            <div className=\"modify-data__display-old\">/ {reps} </div>\n                        </div>\n                    </div>\n                    <div className=\"buttons content__buttons\">\n                        <button\n                            onClick={() => setShowFinishTraining(true)}\n                            className=\"buttons__finish standard-button\"\n                        >Zakończ trening X\n                        </button>\n                        <button\n                            onClick={handleMovetoAnotherSeries}\n                            className=\"buttons__next standard-button\"\n                            style={{\n                                visibility:\n                                    actualMultiSeries === multi_series.length - 1 &&\n                                    actualSingleSeries ===\n                                    multi_series[multi_series.length - 1].single_series.length - 1\n                                        ? 'hidden'\n                                        : 'visible'\n                            }}\n                            // style={{visibility: actualMultiSeries===multi_series.length && actualSingleSeries === multi_series[multi_series.length-1].single_series.length -1 ? 'hidden' : 'visible'}}\n                            // onClick={goNext}\n                            id=\"nextexercise\"\n                        >Przejdź dalej\n                        </button>\n\n                    </div>\n                </div>\n                <FinishTrainingModal showFinishTraining={showFinishTraining} setShowFinishTraining={setShowFinishTraining}\n                                     handleFinishTraining={handleFinishTraining}/>\n\n            </div>\n        );\n    }\n;\n\nconst mapStateToProps = (state) => {\n    return {\n        training: state.training.training,\n    }\n}\n\nexport default connect(mapStateToProps, {updateTraining})(Training);\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {CloseButton} from \"react-bootstrap\";\nimport {handleMoveToModifyTraining, handleMoveToScheduler, handleMoveToTraining} from \"../../helpers/history_helpers\";\n\nconst RemoveTrainingModal = (props) => {\n    return (\n        <div>\n            <Modal show={props.show} onHide={()=>props.handleClose(false)}>\n                <Modal.Header>\n                    <Modal.Title>Stworzono Trening</Modal.Title>\n                    <CloseButton onClick={()=>props.handleClose(false)} variant=\"white\"/>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>Jeśli jesteś pewien, że chcesz usunąć ten trening kliknij przycisk Usuń Trening</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"standard-button\"\n                            onClick={() => props.handleDeleteTraining(props.id)}>Usuń trening\n                    </button>\n                    {/*<button className=\"standard-button\"*/}\n                    {/*        onClick={() => handleMoveToModifyTraining(props.history)}>Modyfikuj trening*/}\n                    {/*</button>*/}\n                    {/*<button className=\"standard-button\" onClick={() => handleMoveToTraining(props.history)}>Ćwicz*/}\n                    {/*</button>*/}\n                    {/*<button className=\"standard-button\" onClick={() => handleMoveToScheduler(props.history)}>Przejdź do*/}\n                    {/*    kalendarza*/}\n                    {/*</button>*/}\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveTrainingModal;\n","import React, {useState} from 'react';\nimport {Field, Formik} from \"formik\";\nimport {connect} from \"react-redux\";\nimport {createTraining, deleteCurrentTraining, getTrainings, updateTraining} from \"../../redux/actions/trainingActions\";\nimport DatePicker from \"react-datepicker\";\nimport {convertDate} from \"../helpers/function_helpers\";\nimport {useHistory} from \"react-router-dom\";\nimport {handleMoveToScheduler, handleMoveToTraining} from \"../helpers/history_helpers\";\nimport \"../../new_sass/modify_training.scss\"\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport AddTrainingToDifferentDayModal from \"../modify_training/modals/AddTrainingToDifferentDayModal\";\nimport RemoveTrainingModal from \"../modify_training/modals/RemoveTrainingModal\";\n\nconst ModifyTraining = (props) => {\n\n    const history = useHistory()\n    const [visibleElements, setVisibleElements] = useState([]);\n    const [removeTrainingModal, setRemoveTrainingModal] = useState(false);\n    const [differentDayModal, setDifferentDayModal] = useState(false);\n    const handleModifyTraining = async (data) => {\n        await props.updateTraining(data)\n    }\n    const handleCopyTrainingToAnotherDate = async (data) => {\n        await props.createTraining(data)\n    }\n\n    const handleDeleteTraining = async (id) => {\n        await props.deleteCurrentTraining(id)\n    }\n    const handleDate = (date, values) => {\n        values.date = date\n\n    }\n\n\n    const toggleVisibility = (elementId) => {\n        setVisibleElements((prevVisibleElements) => {\n            if (prevVisibleElements.includes(elementId)) {\n                return prevVisibleElements.filter((id) => id !== elementId);\n            } else {\n                return [...prevVisibleElements, elementId];\n            }\n        });\n    };\n    console.log(\"visible elmenets\")\n    console.log(visibleElements)\n    return (\n        <div className=\"modify-training\">\n            <RemoveTrainingModal id={props.training.id} show={removeTrainingModal} handleClose={setRemoveTrainingModal}\n                                 getTrainings={props.getTrainings} handleDeleteTraining={handleDeleteTraining}\n                                 handleMoveToScheduler={handleMoveToScheduler} history={props.history}/>\n            <AddTrainingToDifferentDayModal show={differentDayModal} handleClose={setDifferentDayModal}\n                                            training={props.training} createTraining={props.createTraining}\n                                            getTrainings={props.getTrainings} handleMoveToScheduler={handleMoveToScheduler}\n                                            history={props.history}\n            />\n            <Formik\n                initialValues={props.training}\n                onSubmit={(values, {setSubmitting}) => {\n                    console.log(\"submit\")\n                    handleModifyTraining(values)\n                }}>\n                {({\n                      values,\n                      setFieldValue,\n                      handleChange,\n                      handleSubmit,\n                  }) => (\n                    <form className=\"modify-training__form\" onSubmit={handleSubmit}>\n                        <div className=\"mt-data modify-training__mt-data\">\n                            <h1 className=\"title modify-training__title\">Modyfikuj Trening</h1>\n                            <DatePicker locale='pl'\n                                        name=\"date\"\n                                        value={values.date}\n                                        className=\"create-training__datepicker animated-datepicker\"\n                                        placeholderText={\"Wybierz date treningu\"}\n                                        dateFormat='yyyy-MM-dd'\n                                        onChange={(date) => setFieldValue('date', convertDate(date))\n                                        }\n                            />\n                            <div className=\"mt-data__buttons\">\n                                <button className=\"standard-button\"\n                                        onClick={() => setRemoveTrainingModal(true)}>Usuń trening -\n                                </button>\n                                <button className=\"standard-button\"\n                                        onClick={() => handleMoveToTraining(history)}>Trenuj ->\n                                </button>\n                                <button className=\"standard-button\"\n                                        onClick={() => setDifferentDayModal(true)}>Dodaj trening do\n                                    innego dnia +\n                                </button>\n\n                            </div>\n                            <div className=\"animatedInput\">\n                                <Field onChange={handleChange} name=\"name\" value={values.name} type=\"text\"/>\n                                <span>Nazwa Treningu</span>\n                            </div>\n\n                            <div className=\"animatedInput\">\n                                <Field onChange={handleChange} name=\"description\" value={values.description}\n                                       type=\"text\"/>\n                                <span>Opis treningu</span>\n                            </div>\n                            <div className=\"mt-data--list\">\n                                <div className=\"mt-data__buttons\">\n                                    {/*<button className=\"standard-button\"*/}\n                                    {/*        onClick={() => handleMoveToTraining(history)}>Trenuj ->*/}\n                                    {/*</button>*/}\n                                    {/*<button className=\"standard-button\"*/}\n                                    {/*        onClick={() => handleDeleteTraining(values.id)}>Usuń trening -*/}\n                                    {/*</button>*/}\n                                    {/*<button className=\"standard-button\"*/}\n                                    {/*        onClick={() => handleCopyTrainingToAnotherDate(values)}>Dodaj trening do*/}\n                                    {/*    innego dnia +*/}\n                                    {/*</button>*/}\n                                    <button className=\"standard-button\" type=\"submit\">Modyfikuj trening</button>\n\n                                </div>\n                                <div className=\"multiseries mt-data__multiseries\">\n                                    {values.multi_series.map((multiseries, index) => {\n                                        return (\n                                            <div className=\"multi-element multiseries__multi-element--collapse\">\n                                                <div className=\"multi-element__container\"\n                                                     onClick={() => toggleVisibility(index)}>\n                                                    <div\n                                                        className=\"multi-element__name\">{multiseries.exercise.name}</div>\n                                                    <span className=\"buttons__button multi-element__button\"\n                                                    >\n                                                        <FontAwesomeIcon icon={faPlus}/>\n                                                    </span>\n                                                </div>\n                                                <div\n                                                    className=\"single-series multi-element__single-series--expanded\">\n                                                    {visibleElements.includes(index) && multiseries.single_series.map((singleseries, indexv2) => {\n                                                        return (\n                                                            <div className=\"single-series__element\">\n                                                                <p className=\"single-series__series-num\">Seria {indexv2 + 1}</p>\n                                                                <div className=\"animatedInput\">\n                                                                    <Field onChange={handleChange}\n                                                                           name={`multi_series[${index}].single_series[${indexv2}].reps`}\n                                                                           value={singleseries.reps}\n                                                                           type=\"text\"/>\n                                                                    <span>Liczba powtórzeń</span>\n                                                                </div>\n                                                                <div className=\"animatedInput\">\n                                                                    <Field onChange={handleChange}\n                                                                           name={`multi_series[${index}].single_series[${indexv2}].rest`}\n                                                                           value={singleseries.rest}\n                                                                           type=\"text\"/>\n                                                                    <span>Odpoczynek</span>\n                                                                </div>\n                                                                <div className=\"animatedInput\">\n                                                                    <Field onChange={handleChange}\n                                                                           name={`multi_series[${index}].single_series[${indexv2}].concentric_phase`}\n                                                                           value={singleseries.concentric_phase}\n                                                                           type=\"text\"/>\n                                                                    <span>Faza koncentryczna</span>\n                                                                </div>\n                                                                <div className=\"animatedInput\">\n                                                                    <Field\n                                                                        onChange={handleChange}\n                                                                        name={`multi_series[${index}].single_series[${indexv2}].pause_after_concentric_phase`}\n                                                                        value={singleseries.pause_after_concentric_phase}\n                                                                        type=\"text\"/>\n                                                                    <span>Pauza po fazie koncentrycznej</span>\n                                                                </div>\n                                                                <div\n                                                                    className=\"animatedInput\">\n                                                                    <Field\n                                                                        value={singleseries.eccentric_phase}\n                                                                        name={`multi_series[${index}].single_series[${indexv2}].eccentric_phase`}\n                                                                        onChange={handleChange} type=\"text\"/>\n                                                                    <span>Faza ekscentryczna</span>\n                                                                </div>\n                                                                <div\n                                                                    className=\"animatedInput\">\n                                                                    <Field\n                                                                        name={`multi_series[${index}].single_series[${indexv2}].pause_after_eccentric_phase`}\n                                                                        value={singleseries.pause_after_eccentric_phase}\n                                                                        onChange={handleChange} type=\"text\"/>\n                                                                    <span>Pauza po fazie ekscentrycznej</span>\n                                                                </div>\n\n                                                            </div>\n                                                        )\n                                                    })}\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        training: state.training.training,\n    }\n}\nexport default connect(mapStateToProps, {\n    updateTraining,\n    createTraining,\n    deleteCurrentTraining,\n    getTrainings\n})(ModifyTraining);","import \"../../new_sass/navbar.scss\"\nimport React, {useState} from \"react\";\nimport {faDumbbell, faWeight} from \"@fortawesome/fontawesome-free-solid\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n    handleMoveToCreateTraining,\n    handleMovetoDimensions,\n    handleMovetoGoals,\n    handleMoveToMobileCreateTraining,\n    handleMovetoMobileDimensions, handleMoveToMobileGoals,\n    handleMoveToMobileScheduler,\n    handleMoveToMobileSettings,\n    handleMoveToScheduler, handleMovetoSettings\n} from \"../helpers/history_helpers\";\nimport {useHistory} from \"react-router-dom\";\nconst Navbar = () =>{\n    const history = useHistory()\n    const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n\n    return (\n        <nav className=\"nav_bar\">\n            <div className=\"nav_bar__toggle\" onClick={() => setIsMobileNavOpen(!isMobileNavOpen)}><FontAwesomeIcon icon={faBars}/></div>\n            <div className=\"nav_bar__logo\"><FontAwesomeIcon icon={faDumbbell}/>TrueEffects</div>\n            <ul className=\"nav_bar__desktop\">\n                <li className=\"nav_bar__element nav_bar__desktop__element\" onClick={()=>handleMoveToScheduler(history)}><a>Kalendarz treningów</a></li>\n                <li className=\"nav_bar__element nav_bar__desktop__element\" onClick={()=>handleMoveToCreateTraining(history)}><a>Kreator treningu</a></li>\n                <li className=\"nav_bar__element nav_bar__desktop__element\" onClick={()=>handleMovetoGoals(history)}><a>Cele</a></li>\n                <li className=\"nav_bar__element nav_bar__desktop__element\" onClick={()=>handleMovetoDimensions(history)}><a>Pomiary</a></li>\n                <li className=\"nav_bar__element nav_bar__desktop__element\" onClick={()=> handleMovetoSettings(history)}><a>Ustawienia</a></li>\n            </ul>\n            <ul className=\"nav_bar__mobile\" style={{ display: isMobileNavOpen ? 'flex' : 'none' }}>\n                <li className=\"nav_bar__element nav_bar__mobile__element\" onClick={()=>handleMoveToMobileScheduler(history, isMobileNavOpen, setIsMobileNavOpen)} ><a>Kalendarz treningów</a></li>\n                <li className=\"nav_bar__element nav_bar__mobile__element\" onClick={()=>handleMoveToMobileCreateTraining(history, isMobileNavOpen, setIsMobileNavOpen)}><a>Kreator treningu</a></li>\n                <li className=\"nav_bar__element nav_bar__mobile__element\" onClick={()=>{handleMoveToMobileGoals(history, isMobileNavOpen, setIsMobileNavOpen)}}><a>Cele</a></li>\n                <li className=\"nav_bar__element nav_bar__mobile__element\" onClick={()=>handleMovetoMobileDimensions(history, isMobileNavOpen, setIsMobileNavOpen)}><a>Pomiary</a></li>\n                <li className=\"nav_bar__element nav_bar__mobile__element\" onClick={()=>handleMoveToMobileSettings(history, isMobileNavOpen, setIsMobileNavOpen)}><a>Ustawienia</a></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React, {useEffect} from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport DatePicker from \"react-datepicker\";\nimport {useFormik} from \"formik\";\nimport {createDimensionValidation} from \"../validation/validation\";\nimport {CloseButton} from \"react-bootstrap\";\nimport {useDate} from \"../hooks/training/useDate\";\n\nexport function CreateDimension(props) {\n    const {date, jsDate, dateError, setDateError, handleDateForDimensions} = useDate()\n    const {values, handleSubmit, handleChange, errors, setValues} = useFormik({\n        initialValues: props.userDimensionsForCreate,\n        validationSchema: createDimensionValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            handleSendDimension()\n        },\n    });\n\n    const handleSendDimension = async () => {\n        let data_obj = values\n        data_obj.date = date\n        if (date) {\n            await props.postDimension(data_obj)\n            await props.getDimensions()\n            await props.handleClose()\n        } else {\n            setDateError(\"Wybierz datę\")\n        }\n    }\n\n    useEffect(() => {\n        setValues(props.userDimensionsForCreate)\n    }, [props.userDimensionConfiguration, props.userDimensions, props.userDimensionsForCreate])\n    return (\n\n        <Modal className=\"transparent-modal\" show={props.show} onHide={props.handleClose}>\n            <form onSubmit={handleSubmit}>\n                <Modal.Header>\n                    <Modal.Title>Stwórz pomiar</Modal.Title>\n                    <CloseButton onClick={props.handleClose} variant=\"white\"/>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"createdimension__elements\">\n                        <DatePicker locale='pl'\n                                    placeholderText={\"Wybierz date\"}\n                                    dateFormat='dd/MM/yyyy'\n                                    selected={jsDate}\n                                    className=\"createdimension__date animated-datepicker\"\n                                    onChange={(date) => handleDateForDimensions(date)}/>\n                        {dateError && <p>{dateError}</p>}\n                        {values !== undefined && Object.keys(props.userDimensionConfigurationForCompare).map(element => {\n                            return (\n                                <div className=\"createdimension__elements__element\" key={element}>\n                                    <div className=\"createdimension__elements__element__row\">\n                                        <div className=\"animatedInput\">\n                                            <input name={element} onChange={handleChange}\n                                                   value={values[element]} required=\"required\"\n                                                   type=\"number\"/>\n                                            <span>{props.userDimensionConfigurationForCompare[element]}</span>\n                                        </div>\n                                        {errors[element] && <p>{errors[element]}</p>}\n                                        {/*<label>{props.userDimensionConfigurationForCompare[element]}</label>*/}\n                                        {/*<input type=\"number\" onChange={handleChange} name={element}*/}\n                                        {/*       value={values[element]}*/}\n                                        {/*/>*/}\n                                        {/*{errors[element] && <p>{errors[element]}</p>}*/}\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"standard-button \" type=\"submit\">Zapisz pomiar</button>\n                    {/*<Button variant=\"primary\" type=\"submit\">*/}\n                    {/*    Save Changes*/}\n                    {/*</Button>*/}\n                </Modal.Footer>\n            </form>\n        </Modal>\n\n    );\n}","import {convertDate} from \"../../helpers/function_helpers\";\nimport {useState} from \"react\";\n\nexport const useDate = () => {\n    const today = new Date()\n    const converted_date = convertDate(today)\n    const [date, setDate] = useState(converted_date)\n    const [jsDate, setJsDate] = useState(today)\n    const [dateError, setDateError] = useState(null)\n    const handleDateForDimensions = (date) => {\n        const convertedDate = convertDate(date)\n        setDate(convertedDate)\n        setJsDate(date)\n    }\n    return {date, jsDate, dateError, setDateError, handleDateForDimensions}\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {MenuItem, Select} from \"@material-ui/core\";\nimport {CloseButton} from \"react-bootstrap\";\nimport {useCompareDimensions} from \"../hooks/training/useCompareDimensions\";\n\nexport function CompareDimensions(props) {\n    const {\n        firstDimension,\n        secondDimension,\n        handleFirstDimensionChange,\n        handleSecondDimensionChange\n    } = useCompareDimensions(props.userDimensions)\n    return (\n        <>\n            <Modal show={props.show} onHide={props.handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Porównywarka pomiarów</Modal.Title>\n                    <CloseButton onClick={props.handleClose} variant=\"white\"/>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"dimensions__table\">\n                        <table>\n                            <tr>\n                                <th>Parametry</th>\n                                <th>\n                                    <Select\n                                        className=\"dimensions__select\"\n                                        onChange={handleFirstDimensionChange}\n                                        value={firstDimension && firstDimension.id}\n                                    >\n                                        {Object.values(props.userDimensions).map(el => {\n                                            return (\n                                                <MenuItem key={el.id} value={el.id}>{el.date}</MenuItem>\n                                            )\n                                        })}\n                                    </Select>\n                                </th>\n                                <th>\n                                    <Select onChange={handleSecondDimensionChange}\n                                            value={secondDimension && secondDimension.id}\n                                    >\n                                        {Object.values(props.userDimensions).map(el => {\n                                            return (\n                                                <MenuItem key={el.id} value={el.id}>{el.date}</MenuItem>\n                                            )\n                                        })}\n                                    </Select>\n                                </th>\n                            </tr>\n                            {Object.keys(props.userDimensionConfigurationForCompare).map(element => {\n                                return (\n                                    <tr key={element}>\n                                        <td>{props.userDimensionConfigurationForCompare[element]}</td>\n                                        <td>{firstDimension && firstDimension[element]}</td>\n                                        <td>{secondDimension && secondDimension[element]}</td>\n                                    </tr>\n                                )\n                            })}\n                        </table>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"standard-button\" onClick={props.handleClose}>Zamknij okno</button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}","import {useEffect, useState} from \"react\";\n\nexport const useCompareDimensions = (userDimensions) => {\n    const [firstDimension, setFirstDimension] = useState(null)\n    const [secondDimension, setSecondDimension] = useState(null)\n\n    useEffect(() => {\n        if (Object.keys(userDimensions).length > 1) {\n            setFirstDimension(userDimensions[0])\n            setSecondDimension(userDimensions[1])\n        } else if (Object.keys(userDimensions).length == 1) {\n            setFirstDimension(userDimensions[0])\n            setSecondDimension(userDimensions[0])\n        }\n    }, [userDimensions])\n\n    const handleFirstDimensionChange = (event) => {\n        setFirstDimension(userDimensions.find(x => x.id === event.target.value))\n    }\n\n    const handleSecondDimensionChange = (event) => {\n        setSecondDimension(userDimensions.find(x => x.id === event.target.value))\n    }\n    return {firstDimension, secondDimension, handleFirstDimensionChange, handleSecondDimensionChange}\n}","import React, {useState} from 'react';\nimport {CreateDimension} from \"../goals_and_measurements_modals/CreateDimension\";\nimport {CompareDimensions} from \"../goals_and_measurements_modals/CompareDimensions\";\nimport {connect} from \"react-redux\";\nimport {getDimensions, postDimension} from \"../../redux/actions/trainingActions\";\nimport \"../../new_sass/main.scss\"\nimport \"../../new_sass/dimensions.scss\"\n\nconst Dimensions = (props) => {\n    const [showCreateDimension, setShowCreateDimension] = useState(false);\n    const [showCompareDimensions, setShowCompareDimensions] = useState(false);\n    const handleShowCreateDimension = () => setShowCreateDimension(true);\n    const handleShowCompareDimensions = () => setShowCompareDimensions(true);\n    const handleCloseCreateDimension = () => setShowCreateDimension(false);\n    const handleCloseCompareDimensions = () => setShowCompareDimensions(false);\n\n\n    return (\n        <div className=\"dimensions\">\n            <div className=\"dimensions--last-dimension\">\n                <h1 className=\"title dimensions__title\">Ostatni pomiar</h1>\n                <div className=\"dimensions__buttons\">\n                    <button className=\"standard-button dimensions__buttons__create\"\n                            onClick={handleShowCreateDimension}>+\n                        Dodaj nowy pomiar\n                    </button>\n                    <button className=\"standard-button dimensions__buttons__compare\"\n                            onClick={handleShowCompareDimensions}>+\n                        Porównaj Pomiary\n                    </button>\n                </div>\n                {props.userDimensions.length > 0 &&\n                    <div className=\"dimensions__date\">\n                        <input disabled={true} value={props.userDimensions[0].date} type=\"text\"/>\n                    </div>}\n\n                {props.userDimensions.length > 0 ?\n                    Object.keys(props.userDimensionConfigurationForCompare).map(element => {\n                        return (\n                            <div key={element}>\n                                <div className=\"animatedInput\">\n                                    <input\n                                        defaultValue={props.userDimensions[0][element]}\n                                        type=\"text\" disabled=\"true\"/>\n                                    <span>{props.userDimensionConfigurationForCompare[element]}</span>\n                                </div>\n                            </div>\n                        )\n                    }) : <p>Nie masz jeszcze żadnych pomiarów</p>}\n                <CreateDimension show={showCreateDimension} handleClose={handleCloseCreateDimension}\n                                 handleShow={handleShowCreateDimension}\n                                 getDimensions={props.getDimensions}\n                                 userDimensionConfiguration={props.userDimensionConfiguration}\n                                 userDimensionsForCreate={props.userDimensionsForCreate}\n                                 userDimensionConfigurationForCompare={props.userDimensionConfigurationForCompare}\n\n                                 userDimensions={props.userDimensions}\n                                 postDimension={props.postDimension}\n                />\n                <CompareDimensions show={showCompareDimensions} handleClose={handleCloseCompareDimensions}\n                                   handleShow={handleShowCompareDimensions}\n                                   userDimensions={props.userDimensions}\n                                   userDimensionConfiguration={props.userDimensionConfiguration}\n                                   userDimensionConfigurationForCompare={props.userDimensionConfigurationForCompare}\n                />\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userDimensionConfiguration: state.training.userDimensionConfiguration,\n        userDimensions: state.training.userDimensions,\n        userDimensionsForCreate: state.training.userDimensionsForCreate,\n        userDimensionConfigurationForCompare: state.training.userDimensionConfigurationForCompare\n    }\n}\nexport default connect(mapStateToProps, {postDimension, getDimensions})(Dimensions);","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport DatePicker from \"react-datepicker\";\nimport {useFormik} from \"formik\";\nimport {createGoalValidation} from \"../validation/validation\";\nimport {handleDateForGoals} from \"../helpers/function_helpers\";\nimport {CloseButton} from \"react-bootstrap\";\n\nexport function CreateGoal(props) {\n    const {values, setFieldValue, handleSubmit, handleChange, errors} = useFormik({\n        initialValues: {\n            goal: '',\n            description: '',\n            finishDate: null,\n            finishJsDate: null,\n        },\n        validationSchema: createGoalValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            handleSendGoals(values)\n        },\n    });\n\n    const handleSendGoals = async () => {\n        const data = {\n            \"finish_date\": values.finishDate,\n            \"goal\": values.goal,\n            \"description\": values.description,\n            \"completed\": false,\n        }\n        await props.postGoals(data)\n        await props.getCompletedGoals()\n        await props.getGoalsToAchieve()\n        await props.handleClose()\n    }\n    return (\n        <>\n            <Modal className=\"create-goal goals__create-goal\" show={props.show} onHide={props.handleClose} size=\"lg\">\n                <form className=\"create-goal__form\" onSubmit={handleSubmit}>\n                    <Modal.Header className=\"header create-goal__header\">\n                        <Modal.Title>Stwórz cel</Modal.Title>\n                        <CloseButton onClick={props.handleClose} variant=\"white\"/>\n                    </Modal.Header>\n                    <Modal.Body className=\"content create-goal__content\">\n                        <div className=\"inputs content__inputs\">\n                            <div className=\"inputs__datepicker \"><DatePicker locale='pl'\n                                                                             className=\"animated-datepicker\"\n                                                                             placeholderText={\"Data realizacji\"}\n                                                                             dateFormat='dd/MM/yyyy'\n                                                                             selected={values.finishJsDate}\n                                                                             onChange={date => handleDateForGoals(date, setFieldValue)}\n                            />\n                            </div>\n                            {errors.finishDate && <p className=\"inputs__error\">{errors.finishDate}</p>}\n                            <div className=\"inputs__goal-name animatedInput\">\n                                <input name=\"goal\" type=\"text\" value={values.goal} onChange={handleChange}/>\n                                <span>Nazwa celu treningowego</span>\n                            </div>\n                            {errors.goal && <p className=\"inputs__error\">{errors.goal}</p>}\n                            <div className=\"inputs__goal-description animatedInput\">\n\n                                <textarea name=\"description\" cols=\"50\" rows=\"10\" value={values.description}\n                                          onChange={handleChange}></textarea>\n                                <span>Opis celu</span>\n                            </div>\n                            {errors.description && <p className=\"inputs__error\">{errors.description}</p>}\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer className=\"footer create-goal__footer\">\n                        <button className=\"footer__button standard-button\" type=\"submit\">Zapisz cel treningowy\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        </>\n    );\n}\n\n// export default CreateGoal;","import React, {useEffect} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport DatePicker from \"react-datepicker\";\nimport {useFormik} from \"formik\";\nimport {updateGoalValidation} from \"../validation/validation\";\nimport {handleDateForGoals} from \"../helpers/function_helpers\";\nimport {CloseButton} from \"react-bootstrap\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {FormControlLabel} from \"@material-ui/core\";\n\nexport function CheckGoal(props) {\n    const {values, setFieldValue, handleSubmit, handleChange, errors, setErrors} = useFormik({\n        initialValues: {\n            id: props.selectedGoal.id,\n            goal: props.selectedGoal.goal,\n            description: props.selectedGoal.description,\n            completed: props.selectedGoal.completed,\n            finishDate: props.selectedGoal.finish_date,\n            finishJsDate: new Date(props.selectedGoal.finish_date),\n        },\n        validationSchema: updateGoalValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            const data = {\n                \"finish_date\": values.finishDate,\n                \"goal\": values.goal,\n                \"description\": values.description,\n                \"completed\": values.completed,\n            }\n            props.putGoal(data, values.id)\n                .then(()=>{\n                    props.getGoalsToAchieve()\n                    props.getCompletedGoals()\n                    props.setShowCheckGoal(false)\n                })\n                .catch(error => {\n                    setErrors(error.response.data)\n                })\n        },\n    });\n    useEffect(() => {\n        if (props.selectedGoal !== null) {\n            setFieldValue(\"id\", props.selectedGoal.id)\n            setFieldValue(\"goal\", props.selectedGoal.goal)\n            setFieldValue(\"description\", props.selectedGoal.description)\n            setFieldValue(\"completed\", props.selectedGoal.completed)\n            setFieldValue(\"finishDate\", props.selectedGoal.finish_date)\n            setFieldValue(\"finishJsDate\", new Date(props.selectedGoal.finish_date))\n        }\n    }, [props.selectedGoal])\n\n    return (\n        <>\n            <Modal className=\"create-goal goals__create-goal\" show={props.showCheckGoal}\n                   onHide={() => props.setShowCheckGoal(false)} size=\"lg\">\n                <form className=\"create-goal__form\" onSubmit={handleSubmit}>\n                    <Modal.Header className=\"header create-goal__header\">\n                        <Modal.Title>Cel</Modal.Title>\n                        <CloseButton onClick={() => props.setShowCheckGoal(false)} variant=\"white\"/>\n                    </Modal.Header>\n                    <Modal.Body className=\"content create-goal__content\">\n                        <div className=\"inputs content__inputs\">\n                            <div className=\"inputs__datepicker \"><DatePicker locale='pl'\n                                                                             className=\"animated-datepicker\"\n                                                                             placeholderText=\"Data realizacji\"\n                                                                             dateFormat='dd-MM-yyyy'\n                                                                             selected={values.finishJsDate}\n                                // selected={values.finishDate}\n                                                                             onChange={date => handleDateForGoals(date, setFieldValue)}\n                            />\n                            </div>\n                            {errors.finishDate && <p className=\"inputs__error\">{errors.finishDate}</p>}\n                            <div className=\"inputs__goal-name animatedInput\">\n                                <input name=\"goal\" type=\"text\" value={values.goal} onChange={handleChange}/>\n                                <span>Nazwa celu treningowego</span>\n                            </div>\n                            {errors.goal && <p className=\"inputs__error\">{errors.goal}</p>}\n                            <div className=\"inputs__goal-description animatedInput\">\n\n                                <textarea name=\"description\" cols=\"50\" rows=\"10\" value={values.description}\n                                          onChange={handleChange}></textarea>\n                                <span>Opis celu</span>\n                            </div>\n                            {errors.description && <p className=\"inputs__error\">{errors.description}</p>}\n                            <div className=\"inputs__goal-completed\">\n                                <FormControlLabel control={<Checkbox onChange={handleChange} name=\"completed\"/>}\n                                                  label=\"Czy cel został ukończony?\"/>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer className=\"footer create-goal__footer\">\n                        <button className=\"footer__button standard-button\" type=\"submit\">Zapisz cel treningowy\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        </>\n    );\n}","import React, {useState} from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {convertDate} from \"../helpers/function_helpers\";\nimport {createGoalValidation} from \"../validation/validation\";\nimport {useFormik} from \"formik\";\nimport {connect} from \"react-redux\";\nimport {getCompletedGoals, getGoalsToAchieve, postGoal, putGoal} from \"../../redux/actions/trainingActions\";\nimport {CreateGoal} from \"../goals_and_measurements_modals/CreateGoal\";\nimport {CheckGoal} from \"../goals_and_measurements_modals/CheckGoal\";\nimport \"../../new_sass/goals.scss\"\n\n\n\nconst Goals = (props) => {\n    const [showCreateGoal, setShowCreateGoal] = useState(false);\n    const [showCheckGoal, setShowCheckGoal] = useState(false)\n    const [selectedGoal, setSelectedGoal] = useState(null)\n    const handleCloseCreateGoal = () => setShowCreateGoal(false);\n\n    const handleShowCreateGoal = () => setShowCreateGoal(true);\n\n    const {values, setFieldValue, handleSubmit, handleChange, errors} = useFormik({\n        initialValues: {\n            goal: '',\n            description: '',\n            finishDate: null,\n            finishJsDate: null,\n        },\n        validationSchema: createGoalValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            handleSendGoals(values)\n        },\n    });\n    const handleDate = (date) => {\n        const convertedDate = convertDate(date)\n        setFieldValue(\"finishDate\", convertedDate)\n        setFieldValue(\"finishJsDate\", date)\n    }\n    const handleSendGoals = async () => {\n        const data = {\n            \"finish_date\": values.finishDate,\n            \"goal\": values.goal,\n            \"description\": values.description,\n        }\n        await postGoal(data)\n        getCompletedGoals()\n        getGoalsToAchieve()\n    }\n    const handleCheckGoal = async (goal_obj) => {\n        await setSelectedGoal(goal_obj)\n        await setShowCheckGoal(true)\n\n    }\n\n    return (\n        <div className=\"goals\">\n            <div className=\"goals--unrealized\">\n                <h1 className=\"title goals__title\">Do zrealizowania</h1>\n                <div className=\"goals__button\">\n                    <button className=\"standard-button\" onClick={handleShowCreateGoal}>Dodaj nowy cel</button>\n                </div>\n                {props.userGoalsToAchieve.length == 0 &&\n                    <p className=\"goals__info\">Nie masz jeszcze żadnych celów do zrealizowania. Kliknij w przycisk Dodaj\n                        nowy cel aby dodać cel</p>}\n                {props.userGoalsToAchieve.map(goal_obj => {\n                    return (\n                        <div className=\"goals__element\">\n                            <div className=\"goals__date\">{goal_obj.finish_date}</div>\n                            <div className=\"goals__name\">{goal_obj.goal}</div>\n                            <div className=\"goals__check\">\n                                <button className=\"standard-button\" onClick={() => handleCheckGoal(goal_obj)}>Sprawdź\n                                </button>\n                            </div>\n                        </div>\n                    )\n                })}\n\n            </div>\n            <hr className=\"goals--hr\"/>\n            <div className=\"goals--realized\"><h1\n                className=\"title goals__title\">Zrealizowane</h1>\n                {props.userGoalsCompleted.length == 0 &&\n                    <p className=\"goals__info\">Nie masz jeszcze żadnych celów do zrealizowania. Kliknij w przycisk Dodaj\n                        nowy cel aby dodać cel</p>}\n                {props.userGoalsCompleted.map(goal_obj => {\n                    return (\n                        <div className=\"goals__element\">\n                            <div className=\"goals__date\">{goal_obj.finish_date}</div>\n                            <div className=\"goals__name\">{goal_obj.goal}</div>\n                            <div className=\"goals__check\">\n                                <button className=\"standard-button\" onClick={() => handleCheckGoal(goal_obj)}>Sprawdź\n                                </button>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n            <CreateGoal show={showCreateGoal} handleClose={handleCloseCreateGoal} handleShow={handleShowCreateGoal}\n                        postGoals={props.postGoal} getCompletedGoals={props.getCompletedGoals}\n                        getGoalsToAchieve={props.getGoalsToAchieve}\n            />\n            {selectedGoal && <CheckGoal putGoal={props.putGoal} getCompletedGoals={props.getCompletedGoals}\n                                        getGoalsToAchieve={props.getGoalsToAchieve} selectedGoal={selectedGoal}\n                                        showCheckGoal={showCheckGoal} setShowCheckGoal={setShowCheckGoal}/>}\n        </div>\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userGoalsCompleted: state.training.userGoalsCompleted,\n        userGoalsToAchieve: state.training.userGoalsToAchieve\n\n    }\n}\nexport default connect(mapStateToProps, {postGoal, putGoal, getCompletedGoals, getGoalsToAchieve})(Goals);\n","import {createMultiSeriesValidation, createSingleSeriesValidation} from \"../../validation/validation\";\n\nexport const useCreateMultiSeries = (props, values, setFieldValue, setErrors) => {\n    const {multiSeries, setMultiSeries} = props;\n    const {exercise, series_count} = values;\n\n    const handleChangeExercise = (exerciseObject) => {\n        setFieldValue('exercise', exerciseObject)\n    }\n\n    const validateMultiSeries = () => {\n        try {\n            createMultiSeriesValidation.validateSync(values, {abortEarly: false});\n            return true\n        } catch (error) {\n            const formattedErrors = error.inner.reduce((acc, validationError) => {\n                acc[validationError.path] = validationError.message;\n                return acc;\n            }, {});\n            setErrors(formattedErrors);\n            return false\n        }\n    }\n\n    const validateSingleSeries = () => {\n        try {\n            createSingleSeriesValidation.validateSync(values, {abortEarly: false});\n            return true\n        } catch (error) {\n            const formattedErrors = error.inner.reduce((acc, validationError) => {\n                acc[validationError.path] = validationError.message;\n                return acc;\n            }, {});\n\n            setErrors(formattedErrors);\n            return false\n        }\n    }\n\n\n    const addMultiSingleSeries = (e) => {\n        e.preventDefault()\n        if (validateMultiSeries() === true) {\n            const singleSeriesArray = Array.from({length: series_count}, () => values);\n\n            if (multiSeries.length === 0 || multiSeries[multiSeries.length - 1].exercise.id !== exercise.id) {\n                setMultiSeries(prevState => [...prevState, {\n                    \"single_series\": [...singleSeriesArray],\n                    \"exercise\": exercise\n                }]);\n            } else {\n                setMultiSeries(prevState => {\n                    const updatedMultiSeries = [...prevState];\n                    const element = updatedMultiSeries[multiSeries.length - 1];\n                    const updatedSingleSeries = [\n                        ...element.single_series, ...singleSeriesArray\n                    ];\n                    updatedMultiSeries[multiSeries.length - 1] = {\n                        ...element,\n                        single_series: updatedSingleSeries\n                    };\n                    return updatedMultiSeries;\n                });\n            }\n        } else {\n            return null\n        }\n    };\n\n\n    const addToSingleSeries = (e) => {\n        e.preventDefault()\n        if (validateSingleSeries() === true) {\n            const newSingleSeries = {...values};\n\n            if (multiSeries.length === 0 || multiSeries[multiSeries.length - 1].exercise.id !== exercise.id) {\n                setMultiSeries(prevState => [...prevState, {\n                    \"single_series\": [newSingleSeries],\n                    \"exercise\": exercise\n                }]);\n            } else {\n                setMultiSeries(prevState => {\n                    const updatedMultiSeries = [...prevState];\n                    const element = updatedMultiSeries[multiSeries.length - 1];\n\n                    updatedMultiSeries[multiSeries.length - 1] = {\n                        ...element,\n                        single_series: [...element.single_series, newSingleSeries]\n                    };\n                    return updatedMultiSeries;\n                });\n            }\n        } else {\n            return null\n        }\n    };\n\n    const loadExercises = async (param) => {\n        return await props.getExercises(param)\n    }\n    return [loadExercises, addToSingleSeries, addMultiSingleSeries, handleChangeExercise]\n}","import React from 'react';\nimport {useFormik} from \"formik\";\nimport AsyncSelect from \"react-select/async\";\nimport {useCreateMultiSeries} from \"../hooks/training/useCreateMultiSeries\";\n\nconst CreateMultiSeries = (props) => {\n    const {values, setErrors, setFieldValue, handleSubmit, handleChange, errors} = useFormik({\n        initialValues: {\n            exercise: null,\n            extra_weight: 0,\n            rest: 0,\n            reps: 10,\n            concentric_phase: 1,\n            pause_after_concentric_phase: 1,\n            eccentric_phase: 1,\n            pause_after_eccentric_phase: 1,\n            series_count: 1\n\n        },\n        validateOnChange: false,\n        validationOnBlue: false,\n    });\n    const [loadExercises, addToSingleSeries, addMultiSingleSeries, handleChangeExercise] = useCreateMultiSeries(props, values, setFieldValue, setErrors)\n    return (\n        <form className=\"create-series create-training__create-series\" onSubmit={handleSubmit}>\n            <h1 className=\"create-series__title\">Stwórz Serie</h1>\n            <div className=\"inputs create-series__inputs\">\n                <div className=\"inputs__select\">\n                    <AsyncSelect placeholder=\"Wybierz ćwiczenie\" name=\"exercise\" onChange={handleChangeExercise}\n                                 loadOptions={loadExercises}\n                                 className=\"select-input\"\n                                 defaultOptions={props.defaultExercises}/>\n                </div>\n                {errors.exercise && <p className=\"inputs__errors\">{errors.exercise}</p>}\n                <div className=\"inputs__button\">\n                    <button className=\"standard-button\" onClick={()=>props.setShowExerciseModal(true)}>Stwórz ćwiczenie</button>\n                </div>\n                <div className=\"inputs__weight animatedInput\">\n                    <input name=\"extra_weight\" onChange={handleChange} value={values.extra_weight} required=\"required\"\n                           type=\"number\"/>\n                    <span>Dodatkowa waga</span>\n                </div>\n                {errors.extra_weight && <p>{errors.extra_weight}</p>}\n                <div className=\"inputs__rest animatedInput\">\n                    <input name=\"rest\" onChange={handleChange} value={values.rest} required=\"required\" type=\"number\"/>\n                    <span>Czas przerwy</span>\n                </div>\n                {errors.rest && <p className=\"inputs__errors\">{errors.rest}</p>}\n                <div className=\"inputs__reps animatedInput\">\n                    <input name=\"reps\" onChange={handleChange} value={values.reps} required=\"required\" type=\"number\"/>\n                    <span>Liczba powtórzeń</span>\n                </div>\n                {errors.reps && <p className=\"inputs__errors\">{errors.reps}</p>}\n                <div className=\"inputs__concentric_phase animatedInput\">\n                    <input name=\"concentric_phase\" onChange={handleChange} value={values.concentric_phase}\n                           required=\"required\" type=\"number\"/>\n                    <span>Faza koncentryczna</span>\n                </div>\n                {errors.concentric_phase && <p className=\"inputs__errors\">{errors.concentric_phase}</p>}\n                <div className=\"inputs__pause_after_concentric_phase animatedInput\">\n                    <input name=\"pause_after_concentric_phase\" onChange={handleChange}\n                           value={values.pause_after_concentric_phase} required=\"required\" type=\"number\"/>\n                    <span>Pauza po fazie koncentrycznej</span>\n                </div>\n                {errors.pause_after_concentric_phase &&\n                    <p className=\"inputs__errors\">{errors.pause_after_concentric_phase}</p>}\n                <div className=\"inputs__eccentric_phase animatedInput\">\n                    <input name=\"eccentric_phase\" onChange={handleChange} value={values.eccentric_phase}\n                           required=\"required\" type=\"number\"/>\n                    <span>Faza ekscentryczna</span>\n                </div>\n                {errors.eccentric_phase && <p className=\"inputs__errors\">{errors.eccentric_phase}</p>}\n                <div className=\"inputs__pause_after_eccentric_phase animatedInput\">\n                    <input name=\"pause_after_eccentric_phase\" onChange={handleChange}\n                           value={values.pause_after_eccentric_phase} required=\"required\" type=\"number\"/>\n                    <span>Pauza po fazie ekscentrycznej</span>\n                </div>\n                {errors.pause_after_eccentric_phase &&\n                    <p className=\"inputs__errors\">{errors.pause_after_eccentric_phase}</p>}\n                <div className=\"inputs__button\">\n                    <button className=\"standard-button\" onClick={addToSingleSeries}>Dodaj pojedyńczą serie</button>\n                </div>\n                <div className=\"inputs__series_count animatedInput\">\n                    <input name=\"series_count\" onChange={handleChange}\n                           value={values.series_count} required=\"required\" type=\"number\"/>\n                    <span>Liczba serii</span>\n                </div>\n                {errors.series_count && <p className=\"inputs__errors\">{errors.series_count}</p>}\n                <div className=\"inputs__button\">\n                    <button className=\"standard-button\" onClick={addMultiSingleSeries}>Dodaj kilka serii</button>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default CreateMultiSeries;\n","import React from 'react';\nimport {useDisplayMultiSeries} from \"../hooks/training/useDisplayMultiSeries\";\n\nconst DisplayMultiSeries = (props) => {\n    const [visibleElements, handleRemoveSingleSeries, handleRemoveMultiSeries, toggleVisibility] = useDisplayMultiSeries(props)\n\n    return (\n        <div className=\"display-series create-training__display-series\">\n            <h1 className=\"display-series__title\">Serie</h1>\n            {props.multiSeries.length == 0 &&\n                <p className=\"display-series__no-data\">Nie została jeszcze stworzona żadna seria przejdź do sekcji\n                    Stwórz Serie i ją utwórz</p>}\n            <div className=\"container display-series__container\">\n                {props.multiSeries.map((el, multiIndex) => {\n                    return (\n                        <div className=\"multiseries container__multiseries\" key={`${multiIndex}-${el.exercise.name}`} >\n                            <div className=\"single-multiseries multiseries__single-multiseries\">\n                                <p className=\"single-multiseries__title\">{el.exercise.name}</p>\n                                <div className=\"single-multiseries__buttons\">\n                                    <button className=\"buttons__button\"\n                                            onClick={() => toggleVisibility(multiIndex)}>\n                                        Pokaż\n                                    </button>\n                                    <button className=\"buttons__button\"\n                                            onClick={() => handleRemoveMultiSeries(multiIndex)} key={multiIndex}>\n                                        Usuń\n                                    </button>\n                                </div>\n                            </div>\n                            {visibleElements.includes(multiIndex) && el.single_series.map((element, singleIndex) => {\n                                return (\n                                    <div className=\"single-singleseries single-multiseries__single-singleseries\"\n                                         key={`${multiIndex}-${singleIndex}`}>\n                                        <div className=\"header single-singleseries__header\">\n                                            <p className=\"header__phase\">Fazy: {element.concentric_phase}/{element.pause_after_concentric_phase}/{element.eccentric_phase}/{element.pause_after_eccentric_phase}</p>\n                                            <p className=\"header__title\">Seria nr {singleIndex + 1}</p>\n\n                                        </div>\n                                        <div className=\"middle single-singleseries__middle\">\n                                            <p className=\"middle__reps\">Liczba powtórzeń: {element.reps}</p>\n                                            <p className=\"middle__weight\">Waga dodatkowa: {element.extra_weight} kg</p>\n                                        </div>\n                                        <div className=\"bottom single-singleseries__bottom\">\n                                            <p className=\"bottom__rest\">Odpoczynek: {element.rest} s</p>\n                                            <button className=\"bottom__button\"\n                                                    onClick={() => handleRemoveSingleSeries(multiIndex, singleIndex)}>Usuń\n                                            </button>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n            {props.multiSeries.length !== 0 &&\n                <div className=\"create-training__accept-training\">\n                    <button className=\"standard-button\" onClick={props.handleSubmit}>Zaakceptuj trening</button>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default DisplayMultiSeries;\n","import {useState} from \"react\";\n\nexport const useDisplayMultiSeries = (props) => {\n    const [visibleElements, setVisibleElements] = useState([]);\n    const toggleVisibility = (elementId) => {\n        setVisibleElements((prevVisibleElements) => {\n            if (prevVisibleElements.includes(elementId)) {\n                return prevVisibleElements.filter((id) => id !== elementId);\n            } else {\n                return [...prevVisibleElements, elementId];\n            }\n        });\n    };\n    const handleRemoveSingleSeries = (multiIndex, singleIndex) => {\n\n        const updatedMultiSeries = [...props.multiSeries];\n        updatedMultiSeries[multiIndex].single_series.splice(singleIndex, 1);\n        props.setMultiSeries(updatedMultiSeries);\n    }\n\n    const handleRemoveMultiSeries = (multiIndex) => {\n        toggleVisibility(multiIndex)\n        const updatedMultiSeries = [...props.multiSeries];\n        updatedMultiSeries.splice(multiIndex, 1);\n        props.setMultiSeries(updatedMultiSeries);\n    }\n    return [visibleElements, handleRemoveSingleSeries, handleRemoveMultiSeries, toggleVisibility]\n}","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {handleMoveToModifyTraining, handleMoveToScheduler, handleMoveToTraining} from \"../../helpers/history_helpers\";\nimport {CloseButton} from \"react-bootstrap\";\n\nconst CreatedTrainingModal = (props) => {\n    return (\n        <div className=\"created-training-modal create-training__created-training-modal\">\n            <Modal show={props.showCreatedTrainingModal} onHide={props.handleCloseCreatedTrainingModal}>\n                <Modal.Header>\n                    <Modal.Title>Stworzono Trening</Modal.Title>\n                    <CloseButton onClick={props.handleCloseCreatedTrainingModal} variant=\"white\"/>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>Trening został utworzony. Możesz go podejrzeć w kalendarzu treningu. Ewentualnie możesz rozpocząć\n                        trening po kliknięciu w przycisk Ćwicz</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"standard-button\"\n                            onClick={() => handleMoveToModifyTraining(props.history)}>Modyfikuj trening\n                    </button>\n                    <button className=\"standard-button\" onClick={() => handleMoveToTraining(props.history)}>Ćwicz\n                    </button>\n                    <button className=\"standard-button\" onClick={() => handleMoveToScheduler(props.history)}>Przejdź do\n                        kalendarza\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CreatedTrainingModal;\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {CloseButton} from \"react-bootstrap\";\nimport {useFormik} from \"formik\";\nimport {createExerciseModalValidation} from \"../../validation/validation\";\n\nconst CreateExerciseModal = (props) => {\n    const {values, handleChange, handleSubmit, setErrors, errors} = useFormik({\n        initialValues: {\n            name: \"\",\n        },\n        validationSchema: createExerciseModalValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            handleCreateExercise()\n        },\n    });\n    const handleCreateExercise = () => {\n        props.createUserExercise(values)\n            .then(res => {\n                props.handleCloseCreateExerciseModal()\n                props.getExercises(\"\")\n                    .then(response => {\n                        props.setDefaultExercises(response)\n                    })\n            })\n            .catch(error => {\n                setErrors(error.response.data)\n            })\n    }\n\n    return (\n        <div className=\"create-exercise-modal create-training__create-exercise-modal\">\n            <Modal show={props.showCreateExerciseModal} onHide={props.handleCloseCreateExerciseModal}>\n                <form onSubmit={handleSubmit}>\n                    <Modal.Header>\n                        <Modal.Title>Stwórz Ćwiczenie</Modal.Title>\n                        <CloseButton onClick={props.handleCloseCreateExerciseModal} variant=\"white\"/>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"create-exercise-modal__name animatedInput\">\n                            <input name=\"name\" onChange={handleChange} value={values.name}\n                                   type=\"text\"/>\n                            <span>Nazwa Ćwiczenia</span>\n                        </div>\n                        {errors.name && <p className=\"create-exercise-modal__error\">{errors.name}</p>}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button className=\"standard-button\" type=\"submit\">\n                            Stwórz Ćwiczenie\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CreateExerciseModal;\n","import React, {useEffect, useState} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport CreateMultiSeries from \"../create_training_components/CreateMultiSeries\";\nimport {connect} from \"react-redux\";\nimport {createTraining, createUserExercise, getExercises, getTrainings} from \"../../redux/actions/trainingActions\";\nimport DisplayMultiSeries from \"../create_training_components/DisplayMultiSeries\";\nimport {convertDate} from \"../helpers/function_helpers\";\nimport CreatedTrainingModal from \"../create_training_components/modals/CreatedTrainingModal\";\nimport {useHistory} from \"react-router-dom\";\nimport CreateExerciseModal from \"../create_training_components/modals/CreateExerciseModal\";\nimport {useCreateTraining} from \"../hooks/training/useCreateTraining\";\nimport '../../new_sass/create_training.scss'\n\nconst CreateTraining = (props) => {\n    const history = useHistory()\n    const [multiSeries, multiSeriesIndex, singleSeries, values, errors,showCreatedTrainingModal, showCreateExerciseModal, setMultiSeries, setMultiSeriesIndex,\n        setSingleSeries, setFieldValue, handleChange, handleSubmit, handleCloseCreatedTrainingModal, handleCloseCreateExerciseModal,\n        setShowExerciseModal] = useCreateTraining(props.createTraining, props.getTrainings)\n\n    const [defaultExercises, setDefaultExercises] = useState()\n    useEffect(()=>{\n        props.getExercises(\"\")\n            .then(response=>{\n                setDefaultExercises(response)\n            })\n    },[])\n\n    return (\n        <div className=\"create-training\">\n            <div className=\"header create-training__header\">\n                <h1 className=\"header__title\">Stwórz Trening</h1>\n                <DatePicker locale='pl'\n                            name=\"date\"\n                            className=\"header__datepicker animated-datepicker\"\n                            value={values.date}\n                            placeholderText={\"Wybierz date\"}\n                            dateFormat='yyyy-MM-dd'\n                            onChange={(date) => setFieldValue('date', convertDate(date))}\n                />\n                {errors.date && <p className=\"header__errors\">{errors.date}</p>}\n                <div className=\"name header__name animatedInput\">\n                    <input name=\"name\" type=\"text\" required={true} onChange={handleChange}/>\n                    <span>Nazwa treningu</span>\n                </div>\n                {errors.name && <p className=\"header__errors\">{errors.name}</p>}\n                <div className=\"description header__description animatedInput\">\n                    <textarea className=\"description__textarea\" required={true} name=\"description\"\n                              onChange={handleChange}\n                              value={values.description}\n                              rows=\"5\">\n                    </textarea>\n                    <span className=\"description__placeholder\">Opis treningu</span>\n                </div>\n                {errors.description && <p className=\"header__errors\">{errors.description}</p>}\n                {errors.multi_series && <p className=\"header__errors\">{errors.multi_series}</p>}\n                {Object.keys(errors).length == 0 && props.create_single_training_error_message &&\n                    <p className=\"header__errors\">{props.create_single_training_error_message}</p>}\n            </div>\n            <DisplayMultiSeries multiSeries={multiSeries} setMultiSeries={setMultiSeries} handleSubmit={handleSubmit}/>\n            <CreateMultiSeries setMultiSeries={setMultiSeries} multiSeries={multiSeries}\n                               singleSeries={singleSeries}\n                               setSingleSeries={setSingleSeries} multiSeriesIndex={multiSeriesIndex}\n                               setMultiSeriesIndex={setMultiSeriesIndex} getExercises={props.getExercises}\n                               setShowExerciseModal={setShowExerciseModal}\n                               defaultExercises={defaultExercises}\n\n            />\n            <CreatedTrainingModal history={history}\n                                  showCreatedTrainingModal={showCreatedTrainingModal}\n                                  handleCloseCreatedTrainingModal={handleCloseCreatedTrainingModal}\n            />\n            <CreateExerciseModal history={history}\n                                 showCreateExerciseModal={showCreateExerciseModal}\n                                 handleCloseCreateExerciseModal={handleCloseCreateExerciseModal}\n                                 createUserExercise={props.createUserExercise}\n                                 getExercises={props.getExercises}\n                                 setDefaultExercises={setDefaultExercises}\n\n            />\n        </div>);\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        created_training: state.training.created_training,\n        create_single_training_error: state.training.create_single_training_error,\n        create_single_training_error_message: state.training.create_single_training_error_message,\n    }\n}\nexport default connect(mapStateToProps, {getExercises, createTraining, createUserExercise, getTrainings})(CreateTraining);\n","import {useState} from \"react\";\nimport {useFormik} from \"formik\";\nimport {convertDate} from \"../../helpers/function_helpers\";\nimport {createTrainingValidation} from \"../../validation/validation\";\n\nexport const useCreateTraining = (createTraining, getTrainings) => {\n    const [showCreatedTrainingModal, setShowCreatedTrainingModal] = useState(false)\n    const [showCreateExerciseModal, setShowExerciseModal] = useState(false)\n    const [multiSeries, setMultiSeries] = useState([])\n    const [multiSeriesIndex, setMultiSeriesIndex] = useState(0)\n    const [singleSeries, setSingleSeries] = useState([])\n\n    const handleCloseCreatedTrainingModal = () => {\n        setShowCreatedTrainingModal(false);\n    }\n\n    const handleCloseCreateExerciseModal = () => {\n        setShowExerciseModal(false)\n    }\n\n    const handleSubmit = async () => {\n        let data = values\n        data[\"multi_series\"] = multiSeries\n        if (validateTraining(data) === true) {\n            await createTraining(data)\n            await getTrainings()\n            await setShowCreatedTrainingModal(true)\n        } else {\n            return null;\n        }\n    }\n    const {values, setFieldValue, handleChange, setErrors, errors} = useFormik({\n        initialValues: {\n            name: \"\", date: convertDate(new Date()), description: \"\",\n        },\n        validationSchema: createTrainingValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n    });\n\n    const validateTraining = (data) => {\n        try {\n            createTrainingValidation.validateSync(data, {abortEarly: false});\n            setErrors({})\n            return true\n        } catch (error) {\n            const formattedErrors = error.inner.reduce((acc, validationError) => {\n                acc[validationError.path] = validationError.message;\n                return acc;\n            }, {});\n\n            setErrors(formattedErrors);\n            return false\n        }\n    }\n    return [multiSeries, multiSeriesIndex, singleSeries, values, errors, showCreatedTrainingModal, showCreateExerciseModal, setMultiSeries, setMultiSeriesIndex,\n        setSingleSeries, setFieldValue, handleChange, handleSubmit, handleCloseCreatedTrainingModal, handleCloseCreateExerciseModal,\n        setShowExerciseModal]\n\n}","import React from 'react';\n\nconst DashboardCompletedTrainings = (props) => {\n    const handleGoToTraining = (id) => {\n        console.log(\"handleGoToTraining Completed Trainings\")\n    }\n    return (\n        <div className=\"completed-trainings\">\n            <div className=\"completed-trainings__title dashboard__title\">Treningi zrealizowane</div>\n            <div className=\"completed-trainings__list\">\n                {props.lastCompletedTrainings.length==0 && <p className=\"dashboard__error-message\">Nie zrealizowałeś jeszcze żadnych treningów</p>}\n                {props.lastCompletedTrainings.map(completed_training => {\n                    return (\n                        <div className=\"completed-trainings__item\" key={completed_training.id}>\n                            <div className=\"dashboard__buttons\">\n                                <button onClick={() => handleGoToTraining(completed_training.id)}\n                                        className=\"completed-trainings__button dashboard__button\">Trenuj ponownie teraz\n                                </button>\n                                <button\n                                    className=\"completed-trainings__button dashboard__button\">Sprawdź\n                                </button>\n                            </div>\n                            <p className=\"completed-trainings__date dashboard__date\">Data treningu: {completed_training.date}</p>\n                            <p className=\"completed-trainings__name dashboard__name\">Nazwa treningu: {completed_training.name}</p>\n                            <hr/>\n                        </div>\n                    )\n                })}\n            </div>\n\n        </div>\n    );\n};\n\nexport default DashboardCompletedTrainings;\n","import React from 'react';\nimport {handleMovetoDimensions} from \"../helpers/history_helpers\";\nimport {useHistory} from \"react-router-dom\";\n\nconst DashboardLastDimension = (props) => {\n    const history = useHistory()\n    return (\n        <div className=\"last-dimension\">\n            <div className=\"last-dimension__title dashboard__title\">Ostatni pomiar</div>\n            <div className=\"last-dimension__button dashboard__buttons\">\n                <button onClick={() => handleMovetoDimensions(history)}\n                        className=\"upcoming_training__button dashboard__button\">Przejdź do pomiarów\n                </button>\n            </div>\n            {props.userDimensions.length > 0 ?\n                Object.keys(props.userDimensionConfigurationForCompare).map(element => {\n                    return (\n                        <div key={element}>\n                            <div className=\"animatedInput\">\n                                <input\n                                    defaultValue={props.userDimensions[0][element]}\n                                    type=\"text\" disabled=\"true\"/>\n                                <span>{props.userDimensionConfigurationForCompare[element]}</span>\n                            </div>\n                        </div>\n                    )\n                }) : <p className=\"dashboard__error-message\">Nie masz jeszcze żadnych pomiarów</p>}\n        </div>\n    );\n};\n\nexport default DashboardLastDimension;\n","import React from 'react';\n\nconst DashboardUpcomingTrainings = (props) => {\n    const handleGoToTraining = (id) => {\n        console.log(\"handleGoToTraining\")\n    }\n    return (\n        <div className=\"upcoming-trainings\">\n            <div className=\"completed-trainings__title dashboard__title\">Zbliżające się treningi</div>\n            <div className=\"upcoming-trainings__list\">\n                {props.upcomingTrainings.length == 0 &&\n                    <p className=\"dashboard__error-message\">Nie masz jeszcze zaplanowanych żadnych treningów</p>}\n                {props.upcomingTrainings.map(upcoming_training => {\n                    return (\n                        <div className=\"upcoming_training__item\" key={upcoming_training.id}>\n                            <div className=\"dashboard__buttons\">\n                                <button onClick={() => handleGoToTraining(upcoming_training.id)}\n                                        className=\"upcoming_training__button dashboard__button\">Trenuj teraz\n                                </button>\n                                <button className=\"upcoming_training__button dashboard__button\">Sprawdź\n                                </button>\n                            </div>\n                            <p className=\"upcoming_training__date dashboard__date\">Data\n                                Treningu: {upcoming_training.date}</p>\n                            <p className=\"upcoming_training__name dashboard__name\">Nazwa\n                                Treningu: {upcoming_training.name}</p>\n                            <hr/>\n                        </div>\n\n                    )\n                })}\n            </div>\n\n        </div>\n    );\n};\n\nexport default DashboardUpcomingTrainings;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport DashboardCompletedTrainings from \"../dashboard_components/DashboardCompletedTrainings\";\nimport DashboardLastDimension from \"../dashboard_components/DashboardLastDimension\";\nimport DashboardUpcomingTrainings from \"../dashboard_components/DashboardUpcomingTrainings\";\nimport \"../../new_sass/dashboard.scss\";\n\nconst Dashboard = props => {\n    return (\n        <div className=\"dashboard\">\n            <h1 className=\"title\">Strona domowa</h1>\n            <div className=\"main-information dashboard__main-information\">\n                <div className=\"main-information__upcoming-trainings\">\n                    <DashboardUpcomingTrainings\n                        upcomingTrainings={props.upcomingTrainings}/>\n                </div>\n                <div className=\"main-information__completed-trainings\">\n                    <DashboardCompletedTrainings lastCompletedTrainings={props.lastCompletedTrainings}/>\n                </div>\n                <div className=\"main-information__last-dimension\">\n                    <DashboardLastDimension userDimensions={props.userDimensions}\n                                            userDimensionConfigurationForCompare={props.userDimensionConfigurationForCompare}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        upcomingTrainings: state.training.upcomingTrainings,\n        lastCompletedTrainings: state.training.lastCompletedTrainings,\n        userDimensionConfigurationForCompare: state.training.userDimensionConfigurationForCompare,\n        userDimensions: state.training.userDimensions,\n        // userDimensionsForCreate: state.training.userDimensionsForCreate,\n\n    }\n}\nexport default connect(mapStateToProps, null)(Dashboard);\n","import {Route} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Settings from \"./main_components/Settings\";\r\nimport {loadToken, postLogoutAuth} from \"../redux/actions/authenticationActions\";\r\nimport Scheduler from \"./main_components/Scheduler\";\r\nimport Training from \"./main_components/Training\";\r\nimport ModifyTraining from \"./main_components/ModifyTraining\";\r\nimport Navbar from \"./navbar_components/Navbar\";\r\nimport Dimensions from \"./goals_and_dimensions_components/Dimensions\";\r\nimport Goals from \"./goals_and_dimensions_components/Goals\";\r\nimport CreateTraining from \"./main_components/CreateTraining\";\r\nimport Dashboard from \"./main_components/Dashboard\";\r\nimport {\r\n    getCompletedGoals,\r\n    getDimensionConfiguration,\r\n    getDimensionConfigurationForCompare,\r\n    getDimensions,\r\n    getExercises,\r\n    getGoalsToAchieve,\r\n    getLastCompletedTrainings,\r\n    getSingleTraining,\r\n    getTrainings,\r\n    getUpcomingTrainings,\r\n    getUserDimensionsForCreate\r\n} from '../redux/actions/trainingActions';\r\nimport {useAuth} from \"./hooks/auth/useAuth\";\r\n\r\n\r\n\r\nconst DefaultContainer = (props) => {\r\n    const {} = useAuth(props.token, props.loadToken, props.postLogoutAuth, props.history)\r\n    useEffect(() => {\r\n        // if (props.token == null) {\r\n        //     props.history.push('/login')\r\n        // }\r\n        if (props.token) {\r\n            props.getDimensionConfiguration();\r\n            props.getDimensions();\r\n            props.getUserDimensionsForCreate();\r\n            props.getDimensionConfigurationForCompare();\r\n            props.getTrainings();\r\n            props.getSingleTraining(1);\r\n            props.getGoalsToAchieve();\r\n            props.getCompletedGoals();\r\n            props.getUpcomingTrainings();\r\n            props.getLastCompletedTrainings()\r\n\r\n        }\r\n    }, [props.token])\r\n\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            {/*{props.loadedtrainings && props.loadedgoals && props.loadedmeasurements && props.loadedexercises ? */}\r\n            <Route exact path=\"/\" component={Dashboard}/>\r\n            <Route path=\"/goals\" component={Goals}/>\r\n            <Route path=\"/dimensions\" component={Dimensions}/>\r\n            <Route path=\"/settings\" component={Settings}/>\r\n            <Route path=\"/scheduler\" component={Scheduler}/>\r\n            <Route path=\"/training\" component={Training}/>\r\n            <Route path=\"/modify_training\" component={ModifyTraining}/>\r\n            <Route path=\"/create_training\" component={CreateTraining}/>\r\n\r\n            {/*// : <BoxLoading />}*/}\r\n            {/*</div>*/}\r\n\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.authentication.token,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getDimensionConfiguration,\r\n    getDimensions,\r\n    getGoalsToAchieve,\r\n    getCompletedGoals,\r\n    getUserDimensionsForCreate,\r\n    getDimensionConfigurationForCompare,\r\n    getSingleTraining,\r\n    getTrainings,\r\n    getExercises,\r\n    postLogoutAuth,\r\n    loadToken,\r\n    getLastCompletedTrainings,\r\n    getUpcomingTrainings\r\n\r\n})(DefaultContainer);","import {useCookies} from \"react-cookie\";\nimport {useEffect} from \"react\";\n\nexport const useAuth = (token, loadToken, postLogoutAuth, history) => {\n    const [cookies, setCookie, removeCookie] = useCookies(['true_effects_token']);\n\n    useEffect(() => {\n        if (cookies.true_effects_token !== undefined) {\n            return loadToken(cookies.true_effects_token)\n        } else if (token !== null) {\n            return setCookie('true_effects_token', token)\n        } else if (token === null) {\n            history.push('/login')\n        }\n\n\n        // else {\n        //     history.push('/login')\n        // }\n    }, [token])\n    return {cookies, setCookie, removeCookie}\n}","import {\r\n    CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS,\r\n    CREATE_SINGLE_TRAINING_ERROR,\r\n    CREATE_USER_EXERCISE_ERROR,\r\n    GET_CURRENT_TRAINING_SUCCESS,\r\n    GET_LAST_COMPLETED_TRAININGS,\r\n    GET_SINGLE_TRAINING_SUCCESS,\r\n    GET_TRAININGS_SUCCESS,\r\n    GET_UPCOMING_TRAININGS,\r\n    GET_USER_COMPLETED_GOALS_SUCCESS,\r\n    GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS,\r\n    GET_USER_DIMENSION_CONFIGURATION_SUCCESS,\r\n    GET_USER_DIMENSIONS_FOR_CREATE,\r\n    GET_USER_DIMENSIONS_SUCCESS,\r\n    GET_USER_GOALS_TO_ACHIEVE_SUCCESS,\r\n    PUT_USER_DIMENSION_CONFIGURATION_SUCCESS,\r\n    UPDATE_SINGLE_TRAINING_SUCCESS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    trainings: [],\r\n    userGoalsToAchieve: null,\r\n    userGoalsCompleted: null,\r\n    userDimensions: [],\r\n    userDimensionConfiguration: [],\r\n    userDimensionConfigurationForCompare: [],\r\n    userDimensionsForCreate: {},\r\n    trainingForModal: null,\r\n    training: null,\r\n    created_training: null,\r\n    create_single_training_error: null,\r\n    create_single_training_error_message: null,\r\n    createUserExerciseError: null,\r\n    upcomingTrainings: [],\r\n    lastCompletedTrainings: [],\r\n\r\n\r\n};\r\nexport default function trainreducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_TRAININGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                trainings: action.payload,\r\n            }\r\n        case GET_USER_COMPLETED_GOALS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userGoalsCompleted: action.payload,\r\n            }\r\n        case GET_USER_GOALS_TO_ACHIEVE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userGoalsToAchieve: action.payload\r\n            }\r\n        case GET_USER_DIMENSIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userDimensions: action.payload,\r\n            }\r\n        case PUT_USER_DIMENSION_CONFIGURATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userDimensionConfiguration: action.payload\r\n            }\r\n        case GET_USER_DIMENSION_CONFIGURATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userDimensionConfiguration: action.payload\r\n            }\r\n        case GET_USER_DIMENSIONS_FOR_CREATE:\r\n            return {\r\n                ...state,\r\n                userDimensionsForCreate: action.payload\r\n            }\r\n        case GET_USER_DIMENSION_CONFIGURATION_FOR_COMPARE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userDimensionConfigurationForCompare: action.payload\r\n            }\r\n        case GET_SINGLE_TRAINING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                trainingForModal: action.payload,\r\n                training: action.payload\r\n            }\r\n        case GET_CURRENT_TRAINING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                training: action.payload\r\n            }\r\n        case UPDATE_SINGLE_TRAINING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                training: action.payload\r\n            }\r\n        case CREATE_SINGLE_TRAINING_BASED_ON_OLD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                created_training: action.payload,\r\n                create_single_training_error: null,\r\n                create_single_training_error_message: null\r\n            }\r\n        case CREATE_SINGLE_TRAINING_ERROR:\r\n            return {\r\n                ...state,\r\n                create_single_training_error: action.payload,\r\n                create_single_training_error_message: \"Nie udało się utworzyć treningu\"\r\n            }\r\n        case CREATE_USER_EXERCISE_ERROR:\r\n            return {\r\n                ...state,\r\n                createUserExerciseError: \"Nie udało się utworzyć ćwiczenia\"\r\n            }\r\n        case GET_LAST_COMPLETED_TRAININGS:\r\n            return {\r\n                ...state,\r\n                lastCompletedTrainings: action.payload\r\n            }\r\n        case GET_UPCOMING_TRAININGS:\r\n            return {\r\n                ...state,\r\n                upcomingTrainings: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    POST_LOGIN,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_ERROR,\r\n    POST_REGISTER,\r\n    REGISTER_ERROR,\r\n    POST_LOGOUT_AUTH,\r\n    USER_LOADING, TOKEN_LOADED,\r\n} from '../actions/types';\r\nconst initialState = {\r\n    token: null,\r\n    name: null,\r\n    isAuthenticated: null,\r\n    login_error: null,\r\n    error: '',\r\n    error_register: [],\r\n    tokenloaded: false,\r\n    error_register_name: '',\r\n    seconds: '',\r\n    minutes: '',\r\n    hours: '',\r\n\r\n};\r\nexport default function authreducer(state=initialState,action){\r\n    switch(action.type){\r\n        case POST_LOGIN:\r\n            return{\r\n                ...state,\r\n                token:action.payload,\r\n                tokenloaded: true,\r\n                error: ''\r\n            }\r\n        case LOGIN_ERROR:\r\n            return{\r\n                ...state,\r\n                login_error: action.payload\r\n            }\r\n        case POST_REGISTER:\r\n            return{\r\n                ...state,\r\n                token:action.payload.token,\r\n                name:action.payload.username,\r\n                tokenloaded: true,\r\n                error_register: ''\r\n            }\r\n        case REGISTER_ERROR:\r\n            return{\r\n                ...state,\r\n                error_register: action.payload\r\n            }\r\n        case POST_LOGOUT_AUTH:\r\n            return{\r\n                ...state,\r\n                token: '',\r\n                tokenloaded: false\r\n            }\r\n        case USER_LOADING:\r\n            return{\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isLoaded: true,\r\n                isAuthenticated: true,  \r\n                token: action.payload.token,\r\n                name: action.payload.username,\r\n                error: ''\r\n            }\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('name')\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                name: null,\r\n                isAuthenticated:false,\r\n                isLoading: false\r\n            }\r\n        case TOKEN_LOADED:\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport trainingReducer from './trainingReducer';\r\nimport authenticationReducer from './authenticationReducer';\r\nexport default combineReducers({\r\n    training:trainingReducer,\r\n    authentication:authenticationReducer,\r\n    \r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware),));\r\nexport default store;","export default __webpack_public_path__ + \"static/media/logo.5ab95c0c.png\";","import React from 'react';\r\nimport '../new_sass/authenticate-logo.scss';\r\nimport logo from '../images/logo.png';\r\nconst AuthenticateLogo = () => {\r\n    return (\r\n            <div className=\"block authenticate-logo__block\">\r\n                <div className=\"block__circle1\">\r\n                    <div className=\"block__circle2\"></div>\r\n                    <div className=\"block__circle3\"></div>\r\n                    <div className=\"block__circle4\">\r\n                        <div className=\"block__circle4--logo\">\r\n                            <img src={logo} alt=\"logo\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default AuthenticateLogo;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faArrowRight} from '@fortawesome/fontawesome-free-solid';\nimport AuthenticateLogo from \"../AuthenticateLogo\";\nimport {loadUser} from \"../../redux/actions/authenticationActions\";\nimport '../../new_sass/login.scss';\nimport {useLogin} from \"../hooks/auth/useLogin\";\n\nconst Login = (props) => {\n    const [handleMoveToRegister, handleMovetoBack, handleChange, handleSubmit, errors] = useLogin(props)\n    if (props.token !== null) {\n        props.history.push('/')\n    }\n    return (\n        <div className=\"login\">\n            <div className=\"authenticate-logo login__authentication-logo\">\n                <AuthenticateLogo/>\n            </div>\n            <div className=\"container login__container\">\n                <div className=\"header container__header\">\n                    <div className=\"header__element\" onClick={handleMovetoBack}>\n                        <FontAwesomeIcon icon={faArrowLeft}/> Cofnij\n                    </div>\n                    <div className=\"header__element\" onClick={handleMoveToRegister}>\n                        Zarejestruj się <FontAwesomeIcon icon={faArrowRight}/>\n                    </div>\n                </div>\n                <div className=\"content container__content\">\n                    <form className=\"form content__form\" onSubmit={handleSubmit}\n                          noValidate autoComplete=\"off\">\n                        <div className=\"form__title\">Zaloguj się</div>\n                        <div className=\"form__username animatedInput\">\n                            <input\n                                name=\"username\"\n                                onChange={handleChange}\n                                type=\"text\"\n                            />\n                            <span>Nazwa użytkownika</span>\n                        </div>\n                        <div className=\"errors form__errors\">\n                            {errors.username && <p>{errors.username}</p>}\n                        </div>\n                        <div className=\"form__password animatedInput\">\n                            <input\n                                name=\"password\"\n                                onChange={handleChange}\n                                type=\"password\"\n                            />\n                            <span>Hasło</span>\n                        </div>\n                        <div className=\"errors form__errors\">\n                            {errors.password && <p>{errors.password}</p>}\n                        </div>\n                        <div className=\"errors form__errors\">\n                            {Object.keys(errors).length == 0 && props.login_error &&\n                                <p>{props.login_error.non_field_errors[0]}</p>}\n                        </div>\n                        <div className=\"button form__button\">\n                            <button className=\"button__login square-buttons\" type=\"submit\">\n                                Zaloguj się\n                            </button>\n                            <p className=\"button__forgot-password\">\n                                Zapomniałem hasła\n                            </p>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        error: state.authentication.error,\n        login_error: state.authentication.login_error,\n        token: state.authentication.token,\n        tokenloaded: state.authentication.tokenloaded\n    }\n}\nexport default connect(mapStateToProps, {loadUser})(Login);\n","import {useCookies} from \"react-cookie\";\nimport {useFormik} from \"formik\";\nimport {loginUserValidation} from \"../../validation/validation\";\n\nexport const useLogin = (props) => {\n    const [cookies, setCookie] = useCookies(['true_effects_token']);\n    const handleSetToken = (token) => {\n        setCookie(\"true_effects_token\", token)\n    }\n    const handleMoveToRegister = () => {\n        props.history.push('/register')\n    }\n    const handleMovetoBack = () => {\n        props.history.goBack()\n    }\n    const handleLogin = async () => {\n        let data = {\n            \"username\": values.username,\n            \"password\": values.password\n        }\n        return await props.loadUser(data, handleSetToken)\n    }\n\n    const {values, handleChange, handleSubmit, errors} = useFormik({\n        initialValues: {\n            username: \"\", password: \"\",\n        },\n        validationSchema: loginUserValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            handleLogin()\n        },\n    });\n    return [handleMoveToRegister, handleMovetoBack, handleChange, handleSubmit, errors]\n}","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faArrowRight} from '@fortawesome/fontawesome-free-solid';\r\nimport {connect} from 'react-redux';\r\nimport AuthenticateLogo from \"../AuthenticateLogo\";\r\nimport {postRegister} from \"../../redux/actions/authenticationActions\";\r\nimport \"../../new_sass/register.scss\";\r\nimport {useRegister} from \"../hooks/auth/useRegister\";\r\n\r\nconst Register = (props) => {\r\n    const [handleMoveToLogin, handleMovetoBack, handleChange, handleSubmit, errors] = useRegister(props)\r\n    if (props.token !== null) {\r\n        props.history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"authenticate-logo register__authentication-logo\">\r\n                <AuthenticateLogo/>\r\n            </div>\r\n            <div className=\"container register__container\">\r\n                <div className=\"header container__header\">\r\n                    <div className=\"header__element\" onClick={handleMovetoBack}>\r\n                        <FontAwesomeIcon icon={faArrowLeft}/> Cofnij\r\n                    </div>\r\n                    <div className=\"header__element\" onClick={handleMoveToLogin}>\r\n                        Zaloguj się <FontAwesomeIcon icon={faArrowRight}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content container__content\">\r\n                    <form className=\"form content__form\" onSubmit={handleSubmit}\r\n                          noValidate autoComplete=\"off\">\r\n                        <div className=\"form__title\">Zarejestruj się</div>\r\n                        <div className=\"form__username animatedInput\">\r\n                            <input\r\n                                name=\"username\"\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                            />\r\n                            <span>Nazwa użytkownika</span>\r\n                        </div>\r\n                        <div className=\"errors form__errors\">\r\n                            {errors.username && <p>{errors.username}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"form__email animatedInput\">\r\n                            <input\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                type=\"email\"\r\n                            />\r\n                            <span>Adres Email</span>\r\n                        </div>\r\n                        <div className=\"errors form__errors\">\r\n                            {errors.email && <p>{errors.email}</p>}\r\n                        </div>\r\n                        <div className=\"form__password animatedInput\">\r\n                            <input\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                type=\"password\"\r\n                            />\r\n                            <span>Hasło</span>\r\n                        </div>\r\n                        <div className=\"errors form__errors\">\r\n                            {errors.password && <p>{errors.password}</p>}\r\n                        </div>\r\n                        <div className=\"form__password animatedInput\">\r\n                            <input\r\n                                name=\"password2\"\r\n                                onChange={handleChange}\r\n                                type=\"password\"\r\n                            />\r\n                            <span>Powtórz hasło</span>\r\n                        </div>\r\n                        <div className=\"errors form__errors\">\r\n                            {errors.password2 && <p>{errors.password2}</p>}\r\n                        </div>\r\n                        <div className=\"errors form__errors\">\r\n                            {Object.keys(errors).length == 0 && props.register_error &&\r\n                                <p>{props.register_error.non_field_errors[0]}</p>}\r\n                        </div>\r\n                        <div className=\"button form__button\">\r\n                            <button className=\"button__register square-buttons\" type=\"submit\">\r\n                                Zarejestruj się\r\n                            </button>\r\n                            <p className=\"button__forgot-password\">\r\n                                Zapomniałem hasła\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        // <div className=\"containerlogin\">\r\n        //     <div className=\"register\">\r\n        //         <AuthenticateLogo/>\r\n        //         <div className=\"register__secondcontainer\">\r\n        //             <div className=\"register__secondcontainer__top\">\r\n        //                 <div className=\"register__secondcontainer__top__back\" onClick={handleMovetoBack}>\r\n        //                     <div className=\"register__secondcontainer__top__back-icon\"><FontAwesomeIcon\r\n        //                         icon={faArrowLeft}/>\r\n        //                     </div>\r\n        //                     <div className=\"register__secondcontainer__top__back-title\">Cofnij</div>\r\n        //                 </div>\r\n        //                 <div className=\"register__secondcontainer__top__forward\" onClick={handleMoveToLogin}>\r\n        //                     <div className=\"register__secondcontainer__top__forward-title\">Zaloguj się</div>\r\n        //                     <div className=\"register__secondcontainer__top__forward-icon\"><FontAwesomeIcon\r\n        //                         icon={faArrowRight}/></div>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className=\"register__secondcontainer__form\">\r\n        //                 <form className={classes.root} noValidate autoComplete=\"off\">\r\n        //                     <div className=\"register__secondcontainer__form__title\">Zarejestruj się</div>\r\n        //                     <div className=\"register__secondcontainer__form__secondtitle\">Zarejestruj się aby\r\n        //                         kontynuować\r\n        //                     </div>\r\n        //                     <div className=\"register__secondcontainer__form__allinputs\">\r\n        //                         <div className=\"register__secondcontainer__form__username-input\">\r\n        //                             <TextField id=\"standard-password-input\"\r\n        //                                        onChange={(e) => setUsername(e.target.value)}\r\n        //                                        label=\"Nazwa użytkownika\" type=\"text\" autoComplete=\"current-password\"/>\r\n        //                         </div>\r\n        //                         {props.error_register.username !== undefined &&\r\n        //                             <p style={{color: 'red'}}>{props.error_register.username}</p>}\r\n        //                         <div className=\"register__secondcontainer__form__username-email\">\r\n        //                             <TextField id=\"standard-password-input\" onChange={(e) => setEmail(e.target.value)}\r\n        //                                        label=\"Email\" type=\"email\" autoComplete=\"current-password\"/>\r\n        //                         </div>\r\n        //                         {emailerror && <p style={{color: 'red'}}>Nieprawidłowy email</p>}\r\n        //                         <div className=\"register__secondcontainer__form__username-password\">\r\n        //                             <TextField id=\"standard-password-input\"\r\n        //                                        onChange={(e) => setPassword(e.target.value)}\r\n        //                                        label=\"Hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n        //                         </div>\r\n        //                         {props.error_register.password !== undefined &&\r\n        //                             <p style={{color: 'red'}}>{props.error_register.password}</p>}\r\n        //                         <div className=\"register__secondcontainer__form__username-password\">\r\n        //                             <TextField id=\"standard-password-input\"\r\n        //                                        onChange={(e) => setPassword2(e.target.value)}\r\n        //                                        label=\"Powtórz hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n        //                         </div>\r\n        //                         {props.error_register.password2 !== undefined &&\r\n        //                             <p style={{color: 'red'}}>{props.error_register.password2}</p>}\r\n        //\r\n        //                     </div>\r\n        //                     <div className=\"register__secondcontainer__form__button\">\r\n        //                         <button className=\"register__secondcontainer__form__button-register\"\r\n        //                                 onClick={handleRegister}>Zarejestruj się\r\n        //                         </button>\r\n        //                     </div>\r\n        //                 </form>\r\n        //             </div>\r\n        //         </div>\r\n        //\r\n        //     </div>\r\n        // </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error_register: state.authentication.error_register,\r\n        token: state.authentication.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {postRegister})(Register);\r\n","import {useCookies} from \"react-cookie\";\nimport {useFormik} from \"formik\";\nimport {registerUserValidation} from \"../../validation/validation\";\n\nexport const useRegister = (props) => {\n    const [cookies, setCookie, removeCookie] = useCookies(['true_effects_token']);\n\n    const handleSetToken = (token) => {\n        setCookie(\"true_effects_token\", token)\n    }\n\n    const handleMoveToLogin = () => {\n        props.history.push('/login')\n    }\n    const handleMovetoBack = () => {\n        props.history.goBack()\n    }\n    const handleRegister = async () => {\n        let data = {\n            \"username\": values.username,\n            \"email\": values.email,\n            \"password\": values.password,\n            \"password2\": values.password2\n        }\n        await props.postRegister(data, handleSetToken)\n    }\n\n\n    const {values, handleChange, handleSubmit, errors} = useFormik({\n        initialValues: {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\"\n        },\n        validationSchema: registerUserValidation,\n        validateOnChange: false,\n        validationOnBlue: false,\n        onSubmit: values => {\n            handleRegister()\n        },\n    });\n    return [handleMoveToLogin, handleMovetoBack, handleChange, handleSubmit, errors]\n}","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport {CookiesProvider} from \"react-cookie\";\nimport DefaultContainer from './components/DefaultContainer';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './new_sass/main.scss';\nimport Login from \"./components/auth_components/Login\";\nimport Register from \"./components/auth_components/Register\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <StrictMode>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/register\" component={Register}/>\n                        <Route component={DefaultContainer}/>\n                    </Switch>\n                </BrowserRouter>\n            </StrictMode>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}